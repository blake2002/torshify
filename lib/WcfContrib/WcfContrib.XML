<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WcfContrib</name>
    </assembly>
    <members>
        <member name="T:WcfContrib.Configuration.ConfigurationElementCollection`1">
            <summary>
            Represents a configuration element collection
            </summary>
            <typeparam name="T">The element type</typeparam>
        </member>
        <member name="M:WcfContrib.Configuration.ConfigurationElementCollection`1.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:WcfContrib.Configuration.ConfigurationElementCollection`1.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:WcfContrib.Configuration.ConfigurationElementCollection`1.GetElementKey(`0)">
            <summary>
            Gets the element key.
            </summary>
            <param name="element">The element.</param>
            <returns>The element key</returns>
        </member>
        <member name="M:WcfContrib.Configuration.ConfigurationElementCollection`1.IndexOf(`0)">
            <summary>
            Gets the index of the element.
            </summary>
            <param name="element">The element.</param>
            <returns>The index of the element</returns>
        </member>
        <member name="M:WcfContrib.Configuration.ConfigurationElementCollection`1.Add(`0)">
            <summary>
            Adds the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:WcfContrib.Configuration.ConfigurationElementCollection`1.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>
            Adds a configuration element to the <see cref="T:System.Configuration.ConfigurationElementCollection"/>.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to add.</param>
        </member>
        <member name="M:WcfContrib.Configuration.ConfigurationElementCollection`1.Remove(`0)">
            <summary>
            Removes the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:WcfContrib.Configuration.ConfigurationElementCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:WcfContrib.Configuration.ConfigurationElementCollection`1.Remove(System.Object)">
            <summary>
            Removes the element with the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:WcfContrib.Configuration.ConfigurationElementCollection`1.Clear">
            <summary>
            Clears the elements collection.
            </summary>
        </member>
        <member name="P:WcfContrib.Configuration.ConfigurationElementCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:WcfContrib.Configuration.ConfigurationElementCollection`1.Item(System.String)">
            <summary>
            Gets the element with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:WcfContrib.Configuration.ServicesConfigurationElement">
            <summary>
            Represents a services configuration element
            </summary>
        </member>
        <member name="P:WcfContrib.Configuration.ServicesConfigurationElement.ApplyBoosting">
            <summary>
            Gets or sets a value indicating whether to apply endpoints and bindings boosting.
            </summary>
            <value><c>true</c> if to apply endpoints and bindings boosting; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:WcfContrib.Client.ChannelInvokeContext">
            <summary>
            Represents an channel invocation context
            </summary>
        </member>
        <member name="M:WcfContrib.Client.ChannelInvokeContext.#ctor(System.Type,System.Type,System.Reflection.MethodBase,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ChannelInvokeContext"/> class.
            </summary>
            <param name="instanceType">Type of the client instance.</param>
            <param name="contractType">Type of the contract.</param>
            <param name="method">The method that was invoked.</param>
            <param name="parameters">The parameters sent to the method.</param>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeContext.ContractType">
            <summary>
            Gets the type of the contract.
            </summary>
            <value>The type of the contract.</value>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeContext.InstanceType">
            <summary>
            Gets the type of the client instance.
            </summary>
            <value>The type of the instance.</value>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeContext.Method">
            <summary>
            Gets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeContext.Parameters">
            <summary>
            Gets the parameters sent to the method.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeContext.Extensions">
            <summary>
            Gets a collection of extension objects for this extensible object.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.ServiceModel.IExtensionCollection`1"/> of extension objects.</returns>
        </member>
        <member name="T:WcfContrib.Utils.SynchronizedDictionary`2">
            <summary>
            Represents a sychronized (thread-safe) dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:WcfContrib.Utils.SynchronizedDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Utils.SynchronizedDictionary`2"/> class.
            </summary>
        </member>
        <member name="M:WcfContrib.Utils.SynchronizedDictionary`2.AcquireLock(System.Boolean)">
            <summary>
            Acquires a lock for the dictionary.
            </summary>
            <param name="writeLock">if set to <c>true</c> a write lock is taken.</param>
            <returns>A disposable state which releases the lock when it is disposed.</returns>
        </member>
        <member name="M:WcfContrib.Utils.SynchronizedDictionary`2.PerformNonSynchronized(System.Action{WcfContrib.Utils.SynchronizedDictionary{`0,`1}})">
            <summary>
            Performs the action without acquiring locks.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:WcfContrib.Utils.SynchronizedDictionary`2.PerformSynchronized(System.Action{WcfContrib.Utils.SynchronizedDictionary{`0,`1}})">
            <summary>
            Performs the action with acquiring locks.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:WcfContrib.Utils.SynchronizedDictionary`2.Add(`0,`1)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IDictionary`2"/> is read-only.
            </exception>
        </member>
        <member name="M:WcfContrib.Utils.SynchronizedDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2"/> contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.IDictionary`2"/> contains an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
        </member>
        <member name="M:WcfContrib.Utils.SynchronizedDictionary`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key"/> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IDictionary`2"/> is read-only.
            </exception>
        </member>
        <member name="M:WcfContrib.Utils.SynchronizedDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value"/> parameter. This parameter is passed uninitialized.</param>
            <returns>
            true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"/> contains an element with the specified key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
        </member>
        <member name="M:WcfContrib.Utils.SynchronizedDictionary`2.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:WcfContrib.Utils.SynchronizedDictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:WcfContrib.Utils.SynchronizedDictionary`2.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1"/> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="P:WcfContrib.Utils.SynchronizedDictionary`2.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1"/> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="P:WcfContrib.Utils.SynchronizedDictionary`2.Item(`0)">
            <summary>
            Gets or sets the value with the specified key.
            </summary>
            <value>The value</value>
        </member>
        <member name="P:WcfContrib.Utils.SynchronizedDictionary`2.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:WcfContrib.Extensions.Caching.OutputCacheController">
            <summary>
            Represents the output cache controller used for output caching
            The controller initializes the cache provider using the factory
            Make sure you dispose it in your process exit point if you are using output caching
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheController.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheController.Current">
            <summary>
            Gets the current singleton controller.
            </summary>
            <value>The current singleton controller.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheController.ProviderFactoryType">
            <summary>
            Gets the type of the provider factory.
            </summary>
            <value>The type of the provider factory.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheController.Provider">
            <summary>
            Gets the output cache provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="T:WcfContrib.Client.Behaviors.IClientOperationBehavior">
            <summary>
            Represents an interface for implementing an operation behavior
            </summary>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IClientOperationBehavior.ApplyClientBehavior(WcfContrib.Client.Description.ClientOperationDescription)">
            <summary>
            Applies the client behavior.
            </summary>
            <param name="operationDescription">The operation description.</param>
        </member>
        <member name="T:WcfContrib.Extensions.Context.ActivationContextInitializerBehavior">
            <summary>
            Represents a service behavior responsible for extending the service activation
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Context.ActivationContextInitializerBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Context.ActivationContextInitializerBehavior"/> class.
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Context.ActivationContextInitializerBehavior.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Context.ActivationContextInitializerBehavior"/> class.
            </summary>
            <param name="createMessageBuffer">if set to <c>true</c>, A message buffer is created.</param>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextInitializerBehavior.CreateMessageBuffer">
            <summary>
            Gets or sets a value indicating whether to create a message buffer.
            </summary>
            <value><c>true</c> if to create a message buffer; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:WcfContrib.Extensions.Context.ActivationContextInitializerAttribute">
            <summary>
            Represents a service behavior attribute responsible for extending the service activation
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Context.ActivationContextInitializerAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Context.ActivationContextInitializerBehavior"/> class.
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Context.ActivationContextInitializerAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Context.ActivationContextInitializerBehavior"/> class.
            </summary>
            <param name="createMessageBuffer">if set to <c>true</c>, A message buffer is created.</param>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextInitializerAttribute.CreateMessageBuffer">
            <summary>
            Gets or sets a value indicating whether to create a message buffer.
            </summary>
            <value><c>true</c> if to create a message buffer; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:WcfContrib.Extensions.Context.ActivationContextExtensionBehaviorElement">
            <summary>
            Represents an activation context extension behavior element
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Context.ActivationContextExtensionBehaviorElement.CreateBehavior">
            <summary>
            Creates a behavior extension based on the current configuration settings.
            </summary>
            <returns></returns>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtensionBehaviorElement.CreateMessageBuffer">
            <summary>
            Gets or sets a value indicating whether to create a message buffer.
            </summary>
            <value><c>true</c> if to create a message buffer; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtensionBehaviorElement.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtensionBehaviorElement.BehaviorType">
            <summary>
            Gets the type of behavior.
            </summary>
        </member>
        <member name="T:WcfContrib.Errors.ErrorContextHandlerBehavior">
            <summary>
            A service behavior for applying error context handlers for a service
            </summary>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Errors.ErrorContextHandlerBehavior"/> class.
            </summary>
            <param name="contextHandlerTypeNames">The context handler type names.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Errors.ErrorContextHandlerBehavior"/> class.
            </summary>
            <param name="contextHandlerTypeNames">The context handler type names.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Errors.ErrorContextHandlerBehavior"/> class.
            </summary>
            <param name="contextHandlerTypes">The context handler types.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.#ctor(System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Errors.ErrorContextHandlerBehavior"/> class.
            </summary>
            <param name="contextHandlerTypes">The context handler types.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.#ctor(System.Collections.Generic.IEnumerable{WcfContrib.Errors.IErrorContextHandler})">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Errors.ErrorContextHandlerBehavior"/> class.
            </summary>
            <param name="contextHandlers">The context handlers.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.#ctor(WcfContrib.Errors.IErrorContextHandler[])">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Errors.ErrorContextHandlerBehavior"/> class.
            </summary>
            <param name="contextHandlers">The context handlers.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.AddContextHandler(System.String[])">
            <summary>
            Adds the context handlers by type names.
            </summary>
            <param name="contextHandlerTypeNames">The context handler type names.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.AddContextHandlers(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds the context handlers by type names.
            </summary>
            <param name="contextHandlerTypeNames">The context handler type names.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.AddContextHandler(System.Type[])">
            <summary>
            Adds the context handlers by types.
            </summary>
            <param name="contextHandlerTypes">The context handler types.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.AddContextHandlers(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Adds the context handlers by types.
            </summary>
            <param name="contextHandlerTypes">The context handler types.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.AddContextHandler(WcfContrib.Errors.IErrorContextHandler[])">
            <summary>
            Adds the context handlers.
            </summary>
            <param name="contextHandlers">The context handlers.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.AddContextHandlers(System.Collections.Generic.IEnumerable{WcfContrib.Errors.IErrorContextHandler})">
            <summary>
            Adds the context handlers.
            </summary>
            <param name="contextHandlers">The context handlers.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.AddContextHandler(System.ServiceModel.Description.ServiceDescription,WcfContrib.Errors.IErrorContextHandler[])">
            <summary>
            Adds the context handlers to the given service description.
            </summary>
            <param name="serviceDescription">The service description.</param>
            <param name="contextHandlers">The context handlers.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerBehavior.AddContextHandlers(System.ServiceModel.Description.ServiceDescription,System.Collections.Generic.IEnumerable{WcfContrib.Errors.IErrorContextHandler})">
            <summary>
            Adds the context handlers to the given service description.
            </summary>
            <param name="serviceDescription">The service description.</param>
            <param name="contextHandlers">The context handlers.</param>
        </member>
        <member name="T:WcfContrib.Errors.ErrorContextHandlerAttribute">
            <summary>
            A service behavior for applying the error context handler for a service
            </summary>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Errors.ErrorContextHandlerAttribute"/> class.
            </summary>
            <param name="contextHandlerTypeNames">The context handler type names.</param>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerAttribute.#ctor(System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Errors.ErrorContextHandlerAttribute"/> class.
            </summary>
            <param name="contextHandlerTypes">The context handler types.</param>
        </member>
        <member name="T:WcfContrib.Errors.ErrorContextHandlerExtensionElement">
            <summary>
            Represents an error context handler behavior extension element
            </summary>
        </member>
        <member name="M:WcfContrib.Errors.ErrorContextHandlerExtensionElement.CreateBehavior">
            <summary>
            Creates a behavior extension based on the current configuration settings.
            </summary>
            <returns></returns>
        </member>
        <member name="P:WcfContrib.Errors.ErrorContextHandlerExtensionElement.Handlers">
            <summary>
            Gets or sets the error context handler elements collection.
            </summary>
            <value>The error context handler elements collection.</value>
        </member>
        <member name="P:WcfContrib.Errors.ErrorContextHandlerExtensionElement.BehaviorType">
            <summary>
            Gets the type of behavior.
            </summary>
        </member>
        <member name="T:WcfContrib.Client.Description.DescriptionCollection`1">
            <summary>
            Represents a collection for description behaviors
            </summary>
            <typeparam name="T">The type of items</typeparam>
        </member>
        <member name="M:WcfContrib.Client.Description.DescriptionCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.Description.DescriptionCollection`1"/> class.
            </summary>
        </member>
        <member name="M:WcfContrib.Client.Description.DescriptionCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.
            -or-
            <paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.
            </exception>
        </member>
        <member name="M:WcfContrib.Client.Description.DescriptionCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.
            -or-
            <paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.
            </exception>
        </member>
        <member name="M:WcfContrib.Client.Description.DescriptionCollection`1.AddUnique(`0)">
            <summary>
            Adds the item as unique.
            Unique means that if another item of the same type exists in the collection, the item will not be added.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:WcfContrib.Client.Description.DescriptionCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the range.
            Doesn't add as unique.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:WcfContrib.Client.Description.DescriptionCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Adds the items as unique.
            Unique means that if another item of the same type exists in the collection, the item will not be added.
            </summary>
            <param name="source">The items source.</param>
            <param name="unique">if set to <c>true</c>, The items are added as unique.</param>
        </member>
        <member name="M:WcfContrib.Client.Description.DescriptionCollection`1.ForEach(System.Action{`0})">
            <summary>
            Peforms an action on all the items.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:WcfContrib.Client.Description.DescriptionCollection`1.ForEach(System.Action{System.Int32,`0})">
            <summary>
            Peforms an action on all the items.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="T:WcfContrib.Handlers.IdentityHelper">
            <summary>
            A helper class for dealing with identity context
            </summary>
        </member>
        <member name="M:WcfContrib.Handlers.IdentityHelper.GetUsername">
            <summary>
            Gets the name of the user from the claim identity scope.
            Strips domain if exists.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Handlers.IdentityHelper.GetUsername(WcfContrib.Handlers.IdentityScope)">
            <summary>
            Gets the name of the user from the given identity scope.
            Strips domain if exists.
            </summary>
            <param name="scope">The identity scope.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Handlers.IdentityHelper.GetUsername(System.Boolean)">
            <summary>
            Gets the name of the user from the claim identity scope.
            </summary>
            <param name="stripDomain">if set to <c>true</c>, the domain is stripped.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Handlers.IdentityHelper.GetUsername(System.Boolean,WcfContrib.Handlers.IdentityScope)">
            <summary>
            Gets the name of the user from the claim identity scope.
            </summary>
            <param name="stripDomain">if set to <c>true</c>, the domain is stripped.</param>
            <param name="scope">The identity scope.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Handlers.IdentityHelper.GetUsername(System.Boolean,WcfContrib.Handlers.IdentityScope,System.ServiceModel.ServiceSecurityContext)">
            <summary>
            Gets the name of the user from the identity scope.
            </summary>
            <param name="stripDomain">if set to <c>true</c>, the domain is stripped.</param>
            <param name="scope">The identity scope.</param>
            <param name="context">The security context.</param>
            <returns></returns>
        </member>
        <member name="T:WcfContrib.Client.InvokeErrorAction">
            <summary>
            Represents available actions to be taken place upon invocation errors.
            </summary>
        </member>
        <member name="F:WcfContrib.Client.InvokeErrorAction.Throw">
            <summary>
            Throw the error
            </summary>
        </member>
        <member name="F:WcfContrib.Client.InvokeErrorAction.Suppress">
            <summary>
            Suppress the error
            </summary>
        </member>
        <member name="T:WcfContrib.Extensions.Caching.OutputCacheBehaviorAttribute">
            <summary>
            Represents output caching attribute for client channels, service or operation contracts
            </summary>
        </member>
        <member name="T:WcfContrib.Client.Behaviors.IClientEndpointBehavior">
            <summary>
            Represents an interface for implementing an endpoint behavior
            </summary>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IClientEndpointBehavior.ApplyClientBehavior(WcfContrib.Client.ClientChannel,WcfContrib.Client.Description.ClientEndpointDescription)">
            <summary>
            Applies the client behavior.
            </summary>
            <param name="clientChannel">The client channel.</param>
            <param name="endpointDescription">The endpoint description.</param>
        </member>
        <member name="T:WcfContrib.Client.Behaviors.IClientContractBehavior">
            <summary>
            Represents an interface for implementing a contract behavior
            </summary>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IClientContractBehavior.ApplyClientBehavior(WcfContrib.Client.Description.ClientContractDescription)">
            <summary>
            Applies the client behavior.
            </summary>
            <param name="contractDescription">The contract description.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheBehaviorAttribute.#ctor(WcfContrib.Extensions.Caching.OutputCachePolicy,System.Int64,System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Caching.OutputCacheBehaviorAttribute"/> class.
            </summary>
            <param name="policy">The cache policy.</param>
            <param name="millisecondsInterval">The time interval in milliseconds.</param>
            <param name="comparerTypes">The index-based comparers used to distinguish between pazrameter instances.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheBehaviorAttribute.#ctor(System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Caching.OutputCacheBehaviorAttribute"/> class.
            </summary>
            <param name="comparerTypes">The index-based comparers used to distinguish between pazrameter instances.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheBehaviorAttribute.ApplyClientBehavior(WcfContrib.Client.ClientChannel,WcfContrib.Client.Description.ClientEndpointDescription)">
            <summary>
            Applies the client behavior.
            </summary>
            <param name="clientChannel">The client channel.</param>
            <param name="endpointDescription">The endpoint description.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheBehaviorAttribute.ApplyClientBehavior(WcfContrib.Client.Description.ClientContractDescription)">
            <summary>
            Applies the client behavior.
            </summary>
            <param name="contractDescription">The contract description.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheBehaviorAttribute.ApplyClientBehavior(WcfContrib.Client.Description.ClientOperationDescription)">
            <summary>
            Applies the client behavior.
            </summary>
            <param name="operationDescription">The operation description.</param>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheBehaviorAttribute.IgnoreDefaultValue">
            <summary>
            Gets or sets a value indicating whether to ignore the default return value.
            </summary>
            <value><c>true</c> if to ignore the default return value; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheBehaviorAttribute.CompareEnumerableItems">
            <summary>
            Gets a value indicating whether to compare IEnumerable inline items.
            </summary>
            <value>
            	<c>true</c> if to compare IEnumerable inline items; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:WcfContrib.Configuration.OutputCacheExtensionConfigurationElement">
            <summary>
            Represents an output cache extension configuration element
            </summary>
        </member>
        <member name="P:WcfContrib.Configuration.OutputCacheExtensionConfigurationElement.ProviderFactoryTypeName">
            <summary>
            Gets or sets the name of the output cache provider factory type.
            </summary>
            <value>The name of the output cache provider factory type.</value>
        </member>
        <member name="T:WcfContrib.Configuration.ExtensionsConfigurationElement">
            <summary>
            Represents an extensions configuration element
            </summary>
        </member>
        <member name="P:WcfContrib.Configuration.ExtensionsConfigurationElement.OutputCache">
            <summary>
            Gets or sets the output cache extension element.
            </summary>
            <value>The output cache.</value>
        </member>
        <member name="P:WcfContrib.Configuration.ExtensionsConfigurationElement.LogTrace">
            <summary>
            Gets or sets the log trace extension element.
            </summary>
            <value>The log trace.</value>
        </member>
        <member name="T:WcfContrib.Client.Behaviors.IClientErrorHandler">
            <summary>
            Represents an interface for handling client invocation errors
            </summary>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IClientErrorHandler.HandleError(WcfContrib.Client.ClientChannel,WcfContrib.Client.ChannelInvokeContext,System.Exception)">
            <summary>
            Handle the error.
            </summary>
            <param name="clientChannel">The client channel.</param>
            <param name="context">The invocation context.</param>
            <param name="exception">The error.</param>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IClientErrorHandler.ProvideException(WcfContrib.Client.ClientChannel,WcfContrib.Client.ChannelInvokeContext,System.Exception@)">
            <summary>
            Provide an exception to replace the original one.
            </summary>
            <param name="clientChannel">The client channel.</param>
            <param name="context">The invocation context.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="T:WcfContrib.Metadata.OperationPolicyDescription">
            <summary>
            Represents an operation policy definition
            </summary>
        </member>
        <member name="T:WcfContrib.Metadata.PolicyDefinition`1">
            <summary>
            Represents a policy definition
            </summary>
            <typeparam name="T">The description type the policy is defined upon</typeparam>
        </member>
        <member name="M:WcfContrib.Metadata.PolicyDefinition`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Metadata.PolicyDefinition`1"/> class.
            </summary>
        </member>
        <member name="P:WcfContrib.Metadata.PolicyDefinition`1.Description">
            <summary>
            Gets the description the policy is defined upon
            </summary>
        </member>
        <member name="P:WcfContrib.Metadata.PolicyDefinition`1.Policies">
            <summary>
            Gets the policies defined with the specific description
            </summary>
        </member>
        <member name="M:WcfContrib.Metadata.OperationPolicyDescription.GetMessagePolicies(System.ServiceModel.Description.MessageDescription)">
            <summary>
            Gets the policies defined on a specific message description
            </summary>
            <param name="message">The message description.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Metadata.OperationPolicyDescription.GetFaultPolicies(System.ServiceModel.Description.FaultDescription)">
            <summary>
            Gets the policies defined on a specific fault description
            </summary>
            <param name="fault">The fault description.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Metadata.OperationPolicyDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Metadata.OperationPolicyDescription"/> class.
            </summary>
        </member>
        <member name="P:WcfContrib.Metadata.OperationPolicyDescription.Faults">
            <summary>
            Gets the operation faults binding assertions.
            </summary>
            <value>The faults.</value>
        </member>
        <member name="P:WcfContrib.Metadata.OperationPolicyDescription.Messages">
            <summary>
            Gets the operation messages binding assertions.
            </summary>
            <value>The messages.</value>
        </member>
        <member name="T:WcfContrib.Helpers.EndpointHelper">
            <summary>
            A helper class for dealing with service endpoints
            </summary>
        </member>
        <member name="M:WcfContrib.Helpers.EndpointHelper.TryBoosting(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            Tries boosting the service endpoint by replacing the serializer behavior to increase the max items in object graph.
            </summary>
            <param name="endpoint">The service endpoint.</param>
            <returns>Whether or not the boosting had taken place.</returns>
        </member>
        <member name="M:WcfContrib.Helpers.EndpointHelper.IsOnline(System.String)">
            <summary>
            Determines whether the specified service address is online.
            </summary>
            <param name="serviceAddress">The service address.</param>
            <returns>
            	<c>true</c> if the specified service address is online; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WcfContrib.Helpers.EndpointHelper.IsOnline(System.String,System.String)">
            <summary>
            Determines whether the specified service address is online.
            </summary>
            <param name="serviceAddress">The service address.</param>
            <param name="metadataAddress">The metadata address.</param>
            <returns>
            	<c>true</c> if the specified service address is online; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WcfContrib.Helpers.EndpointHelper.IsOnline(System.String,System.String,System.Int32)">
            <summary>
            Determines whether the specified service address is online.
            </summary>
            <param name="serviceAddress">The service address.</param>
            <param name="metadataAddress">The metadata address.</param>
            <param name="timeoutInMilliseconds">The timeout in milliseconds.</param>
            <returns>
            	<c>true</c> if the specified service address is online; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WcfContrib.Helpers.EndpointHelper.IsOnline(System.Uri,System.Uri)">
            <summary>
            Determines whether the specified service address is online.
            </summary>
            <param name="serviceAddress">The service address.</param>
            <param name="metadataAddress">The metadata address.</param>
            <returns>
            	<c>true</c> if the specified service address is online; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WcfContrib.Helpers.EndpointHelper.IsOnline(System.Uri,System.Uri,System.Int32)">
            <summary>
            Determines whether the specified service address is online.
            </summary>
            <param name="serviceAddress">The service address.</param>
            <param name="metadataAddress">The metadata address.</param>
            <param name="timeoutInMilliseconds">The timeout in milliseconds.</param>
            <returns>
            	<c>true</c> if the specified service address is online; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WcfContrib.Helpers.EndpointHelper.IsOnline(System.Uri,System.Uri,System.Int32,System.Net.ICredentials)">
            <summary>
            Determines whether the specified service address is online.
            </summary>
            <param name="serviceAddress">The service address.</param>
            <param name="metadataAddress">The metadata address.</param>
            <param name="timeoutInMilliseconds">The timeout in milliseconds.</param>
            <param name="credentials">The credentials.</param>
            <returns>
            	<c>true</c> if the specified service address is online; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WcfContrib.Helpers.EndpointHelper.IsHttpAddressAvailable(System.Uri,System.Net.HttpStatusCode[])">
            <summary>
            Determines whether the HTTP address is available.
            </summary>
            <param name="address">The HTTP address.</param>
            <param name="availableResponses">The http status responses to be considered as available.</param>
            <returns>
            	<c>true</c> if the HTTP address is available; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WcfContrib.Helpers.EndpointHelper.IsHttpAddressAvailable(System.Uri,System.Net.ICredentials,System.Net.HttpStatusCode[])">
            <summary>
            Determines whether the HTTP address is available.
            </summary>
            <param name="address">The HTTP address.</param>
            <param name="credentials">The credentials.</param>
            <param name="availableResponses">The http status responses to be considered as available.</param>
            <returns>
            	<c>true</c> if the HTTP address is available; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WcfContrib.Helpers.EndpointHelper.IsHttpAddressAvailable(System.Uri,System.Int32,System.Net.HttpStatusCode[])">
            <summary>
            Determines whether the HTTP address is available.
            </summary>
            <param name="address">The HTTP address.</param>
            <param name="timeoutInMilliseconds">The timeout in milliseconds.</param>
            <param name="availableResponses">The http status responses to be considered as available.</param>
            <returns>
            	<c>true</c> if the HTTP address is available; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WcfContrib.Helpers.EndpointHelper.IsHttpAddressAvailable(System.Uri,System.Int32,System.Net.ICredentials,System.Net.HttpStatusCode[])">
            <summary>
            Determines whether the HTTP address is available.
            </summary>
            <param name="address">The HTTP address.</param>
            <param name="timeoutInMilliseconds">The timeout in milliseconds.</param>
            <param name="credentials">The credentials.</param>
            <param name="availableResponses">The http status responses to be considered as available.</param>
            <returns>
            	<c>true</c> if the HTTP address is available; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:WcfContrib.Extensions.Caching.OutputCacheItemKey">
            <summary>
            Represents the key that is attached for a service operation distinguishing calls from one another
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheItemKey.#ctor(System.String,System.Boolean,System.Object[],System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.IEqualityComparer{System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Caching.OutputCacheItemKey"/> class.
            </summary>
            <param name="action">The operation action.</param>
            <param name="compareEnumerableItems">if set to <c>true</c> compare IEnumerable inline items.</param>
            <param name="parameters">The operation parameter values.</param>
            <param name="comparers">The index-based comparers used to distinguish between pazrameter instances.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheItemKey.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheItemKey.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheItemKey.Equals(WcfContrib.Extensions.Caching.OutputCacheItemKey)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheItemKey.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheItemKey.Action">
            <summary>
            Gets the operation action.
            </summary>
            <value>The operation action.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheItemKey.CompareEnumerableItems">
            <summary>
            Gets a value indicating whether to compare IEnumerable inline items.
            </summary>
            <value>
            	<c>true</c> if to compare IEnumerable inline items; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheItemKey.Parameters">
            <summary>
            Gets or sets the operation parameter values.
            </summary>
            <value>The operation parameter values.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheItemKey.Comparers">
            <summary>
            Gets the index-based comparers used to distinguish between pazrameter instances.
            </summary>
            <value>The index-based comparers used to distinguish between pazrameter instances.</value>
        </member>
        <member name="T:WcfContrib.Client.ChannelManageOptions">
            <summary>
            Represents management options for communication channels
            </summary>
        </member>
        <member name="F:WcfContrib.Client.ChannelManageOptions.None">
            <summary>
            No management
            </summary>
        </member>
        <member name="F:WcfContrib.Client.ChannelManageOptions.CloseAsyncAfterOneWay">
            <summary>
            Closes the communication channel asynchronously after invoking O/W operations
            </summary>
        </member>
        <member name="F:WcfContrib.Client.ChannelManageOptions.RenewFaultedChannel">
            <summary>
            Renews faulted communication channel
            </summary>
        </member>
        <member name="F:WcfContrib.Client.ChannelManageOptions.AsyncOwnChannel">
            <summary>
            Assigns a dedicated communication channel for each asynchrnous call
            </summary>
        </member>
        <member name="F:WcfContrib.Client.ChannelManageOptions.ChannelPerCall">
            <summary>
            Assigns a dedicated communication channel for each call
            </summary>
        </member>
        <member name="F:WcfContrib.Client.ChannelManageOptions.SingleCall">
            <summary>
            Assigns a dedicated communication channel for each call and closes channel asynchronously after invoking O/W operations
            </summary>
        </member>
        <member name="F:WcfContrib.Client.ChannelManageOptions.Sequential">
            <summary>
            Closes the communication channel asynchronously after invoking O/W operations and renews faulted channels
            </summary>
        </member>
        <member name="F:WcfContrib.Client.ChannelManageOptions.SequentialAsyncOwnChannel">
            <summary>
            Aborts the communication channel after invoking O/W operations, renews faulted channels and creates a dedicated channel for each asynchrnous call
            </summary>
        </member>
        <member name="T:WcfContrib.Client.Behaviors.IClientOperationInvokerBehavior">
            <summary>
            Represents an interface for invoking a client operation and yielding a result
            </summary>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IClientOperationInvokerBehavior.ProvideResult(WcfContrib.Client.ClientChannel,WcfContrib.Client.ChannelInvokeContext,System.Object,System.Boolean@)">
            <summary>
            Provides the operation result.
            </summary>
            <param name="clientChannel">The client channel.</param>
            <param name="context">The invocation context.</param>
            <param name="correlationState">The correlation state received if implements inspection too.</param>
            <param name="providedResult">if set to <c>true</c>, the returned object is considered as the invocation result.</param>
            <returns>The invocation result</returns>
        </member>
        <member name="T:WcfContrib.Metadata.EndpointPolicyDefinitionSet">
            <summary>
            Represents a set of policy definitions set defined on the endpoint elements
            </summary>
        </member>
        <member name="M:WcfContrib.Metadata.EndpointPolicyDefinitionSet.GetOperationPolicies(System.ServiceModel.Description.OperationDescription)">
            <summary>
            Gets the policies defined on a specific operation description
            </summary>
            <param name="operation">The operation description</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Metadata.EndpointPolicyDefinitionSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Metadata.EndpointPolicyDefinitionSet"/> class.
            </summary>
        </member>
        <member name="P:WcfContrib.Metadata.EndpointPolicyDefinitionSet.Binding">
            <summary>
            Gets the policies defined on the binding
            </summary>
        </member>
        <member name="P:WcfContrib.Metadata.EndpointPolicyDefinitionSet.Operations">
            <summary>
            Gets the policies defined on the operations
            </summary>
        </member>
        <member name="T:WcfContrib.Hosting.ServiceHostFactory">
            <summary>
            Represents a factory for creating a service host of type WcfContrib.Hosting.ServiceHost
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
            <summary>
            Creates a <see cref="T:System.ServiceModel.ServiceHost"/> for a specified type of service with a specific base address.
            </summary>
            <param name="serviceType">Specifies the type of the service.</param>
            <param name="baseAddresses">The <see cref="T:System.Array"/> of type <see cref="T:System.Uri"/> that contains the base addresses for the service hosted.</param>
            <returns>
            A <see cref="T:System.ServiceModel.ServiceHost"/> for the type of service specified with a specific base address.
            </returns>
        </member>
        <member name="T:WcfContrib.Client.Description.ClientOperationDescription">
            <summary>
            Represents a client channel operation description
            </summary>
        </member>
        <member name="M:WcfContrib.Client.Description.ClientOperationDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.Description.ClientOperationDescription"/> class.
            </summary>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientOperationDescription.OperationName">
            <summary>
            Gets the name of the operation.
            </summary>
            <value>The name of the operation.</value>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientOperationDescription.AsyncPattern">
            <summary>
            Gets or sets a value indicating whether the operation uses asynchrnous pattern.
            </summary>
            <value><c>true</c> if [async pattern]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientOperationDescription.Method">
            <summary>
            Gets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientOperationDescription.Invokers">
            <summary>
            Gets the operation invokers.
            </summary>
            <value>The operation invokers.</value>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientOperationDescription.Inspectors">
            <summary>
            Gets the operation inspectors.
            </summary>
            <value>The operation inspectors.</value>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientOperationDescription.Behaviors">
            <summary>
            Gets the operation behaviors.
            </summary>
            <value>The operation behaviors.</value>
        </member>
        <member name="T:WcfContrib.Extensions.ServiceExtensionsSelectorAttribute">
            <summary>
            Represents a service behavior for attaching infrastructure extensions.
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.ServiceExtensionsSelectorAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.ServiceExtensionsSelectorAttribute"/> class.
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsSelectorAttribute.TracingActivation">
            <summary>
            Gets or sets the activation option for the tracing extension
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsSelectorAttribute.MockingActivation">
            <summary>
            Gets or sets the activation option for the mocking extension
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsSelectorAttribute.DurationNoticeLimitInMs">
            <summary>
            Gets or sets the duration limit in miliseconds where a notice will be issued to the output controllers
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsSelectorAttribute.KnownOutputControllers">
            <summary>
            Gets or sets the output controllers for extension messages
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsSelectorAttribute.ParameterDetail">
            <summary>
            Gets or sets the desired parameter detail to be flushed to the output controllers
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsSelectorAttribute.ParameterSerializationDepth">
            <summary>
            Gets or sets the parameter serialization depth to use if serialization is needed
            </summary>
        </member>
        <member name="T:WcfContrib.Extensions.ServiceExtensionsBehaviorElement">
            <summary>
            Represents a behavior element for defining service extensions through the configuration.
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.ServiceExtensionsBehaviorElement.CreateBehavior">
            <summary>
            Creates a behavior extension based on the current configuration settings.
            </summary>
            <returns></returns>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsBehaviorElement.TracingActivation">
            <summary>
            Gets or sets the activation option for the tracing extension
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsBehaviorElement.MockingActivation">
            <summary>
            Gets or sets the activation option for the mocking extension
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsBehaviorElement.KnownOutputControllers">
            <summary>
            Gets or sets the output controllers for extension messages
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsBehaviorElement.DurationNoticeLimitInMs">
            <summary>
            Gets or sets the duration limit in miliseconds where a notice will be issued to the output controllers
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsBehaviorElement.ParameterDetail">
            <summary>
            Gets or sets the desired parameter detail to be flushed to the output controllers
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsBehaviorElement.ParameterSerializationDepth">
            <summary>
            Gets or sets the parameter serialization depth to use if serialization is needed
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsBehaviorElement.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.ServiceExtensionsBehaviorElement.BehaviorType">
            <summary>
            Gets the type of behavior.
            </summary>
        </member>
        <member name="T:WcfContrib.Extensions.Caching.IOutputCacheStore">
            <summary>
            Represents an implementation for a store for output caching
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.IOutputCacheStore.SetItem(WcfContrib.Extensions.Caching.OutputCacheItemKey,System.Object)">
            <summary>
            Adds or replaces the item in the store.
            </summary>
            <param name="key">The item key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.IOutputCacheStore.RemoveItem(WcfContrib.Extensions.Caching.OutputCacheItemKey)">
            <summary>
            Removes the item from the store.
            </summary>
            <param name="key">The item key.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.IOutputCacheStore.TryGetItem(WcfContrib.Extensions.Caching.OutputCacheItemKey,System.Object@)">
            <summary>
            Tries to get the item from the store.
            </summary>
            <param name="key">The item key.</param>
            <param name="value">The value.</param>
            <returns>true if the item was found; otherwise, false</returns>
        </member>
        <member name="T:WcfContrib.Extensions.Behaviors.BoostedSerializerOperationBehavior">
            <summary>
            A behavior that increases the max items in object graph to the maximum value.
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Behaviors.BoostedSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Behaviors.BoostedSerializerOperationBehavior"/> class.
            </summary>
            <param name="operation">The operation description.</param>
        </member>
        <member name="T:WcfContrib.Configuration.LogTraceExtensionConfigurationElement">
            <summary>
            Represents a log trace extension configuration element
            </summary>
        </member>
        <member name="P:WcfContrib.Configuration.LogTraceExtensionConfigurationElement.LogFolderPath">
            <summary>
            Gets or sets the log folder path.
            </summary>
            <value>The log folder path.</value>
        </member>
        <member name="T:WcfContrib.Client.ClientModel">
            <summary>
            Represents a static class for defining information related to the client model
            </summary>
        </member>
        <member name="P:WcfContrib.Client.ClientModel.EndpointAggregation">
            <summary>
            Gets or sets the endpoint aggregation.
            </summary>
            <value>The endpoint aggregation.</value>
        </member>
        <member name="P:WcfContrib.Client.ClientModel.ThrowInlineFaultExceptions">
            <summary>
            Gets or sets a value indicating whether to throw generic FaultException&lt;T&gt; inner known exception.
            Defaults to <c>false</c>
            </summary>
            <value>
            	<c>true</c> if o throw generic FaultException&lt;T&gt; inner known exception; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:WcfContrib.Client.Behaviors.IClientOperationInspectorBehavior">
            <summary>
            Represents an interface for inspecting client operation invocations
            </summary>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IClientOperationInspectorBehavior.BeforeCall(WcfContrib.Client.ClientChannel,WcfContrib.Client.ChannelInvokeContext)">
            <summary>
            Occurs before service operation is called.
            </summary>
            <param name="clientChannel">The client channel.</param>
            <param name="context">The invocation context.</param>
            <returns>The correlation state</returns>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IClientOperationInspectorBehavior.AfterCall(WcfContrib.Client.ClientChannel,WcfContrib.Client.ChannelInvokeContext,System.Object,System.Object)">
            <summary>
            Occurs after service operation was called.
            </summary>
            <param name="clientChannel">The client channel.</param>
            <param name="context">The invocation context.</param>
            <param name="result">The result.</param>
            <param name="correlationState">The correlation state.</param>
        </member>
        <member name="T:WcfContrib.Extensions.Behaviors.BoostedEndpointBehaviorAttribute">
            <summary>
            A behavior that increases the max items in object graph to the maximum value and boosts the binding.
            </summary>
        </member>
        <member name="T:WcfContrib.Client.Behaviors.IClientChannelHandlerBehavior">
            <summary>
            Represents an interface for participating in the initialization of communication channels
            </summary>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IClientChannelHandlerBehavior.ChannelFactoryCreated(WcfContrib.Client.ClientChannel,System.ServiceModel.ChannelFactory)">
            <summary>
            Occurs when the channel factory is created.
            </summary>
            <param name="clientChannel">The client channel.</param>
            <param name="factory">The channel factory.</param>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IClientChannelHandlerBehavior.ChannelCreated(WcfContrib.Client.ClientChannel,System.ServiceModel.ICommunicationObject)">
            <summary>
            Occurs when the communication channel is created.
            </summary>
            <param name="clientChannel">The client channel.</param>
            <param name="channel">The communication channel.</param>
        </member>
        <member name="M:WcfContrib.Internal.EventLogHelper.WriteEvent(System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Write a message to the event log.
            </summary>
            <param name="message">The message to be written to the event log.</param>
            <param name="eventType">The event log entry type.</param>
        </member>
        <member name="M:WcfContrib.Internal.EventLogHelper.WriteEvent(System.String,System.String)">
            <summary>
            Write a message to the event log.
            </summary>
            <param name="source">The event source.</param>
            <param name="message">The message to be written to the event log.</param>
        </member>
        <member name="M:WcfContrib.Internal.EventLogHelper.WriteEvent(System.String,System.String,System.String)">
            <summary>
            Write a message to the event log.
            </summary>
            <param name="source">The event source.</param>
            <param name="logName">The log name.</param>
            <param name="message">The message to be written to the event log.</param>
        </member>
        <member name="M:WcfContrib.Internal.EventLogHelper.WriteEvent(System.String,System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Write a message to the event log.
            </summary>
            <param name="source">The event source.</param>
            <param name="message">The message to be written to the event log.</param>
            <param name="eventType">The event log entry type.</param>
        </member>
        <member name="M:WcfContrib.Internal.EventLogHelper.WriteEvent(System.String,System.String,System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Write a message to the event log.
            </summary>
            <param name="source">The event source.</param>
            <param name="logName">The log name.</param>
            <param name="message">The message to be written to the event log.</param>
            <param name="eventType">The event log entry type.</param>
        </member>
        <member name="T:WcfContrib.Metadata.MetadataHelper">
            <summary>
            Represents a helper for dealing with metadata
            </summary>
        </member>
        <member name="M:WcfContrib.Metadata.MetadataHelper.GetMetadataDescription(System.String)">
            <summary>
            Gets the metadata description from a given address.
            Supports MEX or Http-Get and net.tcp, net.pipe, http or https protocols
            </summary>
            <param name="address">The metadata address.</param>
            <returns>The meta data description</returns>
        </member>
        <member name="M:WcfContrib.Metadata.MetadataHelper.GetMetadataDescription(System.String,System.Net.ICredentials,System.Int32)">
            <summary>
            Gets the metadata description from a given address.
            Supports MEX or Http-Get and net.tcp, net.pipe, http or https protocols
            </summary>
            <param name="address">The metadata address.</param>
            <param name="credentials">The credentials.</param>
            <param name="timeoutInMilliseconds">The timeout in milliseconds.</param>
            <returns>The meta data description</returns>
        </member>
        <member name="M:WcfContrib.Metadata.MetadataHelper.IsMetadataAvailable(System.String)">
            <summary>
            Determines whether a service metadata is available.
            </summary>
            <param name="mexAddress">The metadata address.</param>
            <returns>
            	<c>true</c> if is the service metadata is available; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WcfContrib.Metadata.MetadataHelper.IsMetadataAvailable(System.String,System.Net.ICredentials,System.Int32)">
            <summary>
            Determines whether a service metadata is available.
            </summary>
            <param name="mexAddress">The metadata address.</param>
            <param name="credentials">The credentials.</param>
            <param name="timeoutInMilliseconds">The timeout in milliseconds.</param>
            <returns>
            	<c>true</c> if is the service metadata is available; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:WcfContrib.Configuration.TypeNamesConfigurationCollection">
            <summary>
            Represents a configuration element collection of TypeNameConfigurationElement
            </summary>
        </member>
        <member name="M:WcfContrib.Configuration.TypeNamesConfigurationCollection.GetElementKey(WcfContrib.Configuration.TypeNameConfigurationElement)">
            <summary>
            Gets the element key.
            </summary>
            <param name="element">The element.</param>
            <returns>The element key</returns>
        </member>
        <member name="T:WcfContrib.Configuration.ClientConfigurationElement">
            <summary>
            Represents a client configuration element
            </summary>
        </member>
        <member name="P:WcfContrib.Configuration.ClientConfigurationElement.ApplyBoosting">
            <summary>
            Gets or sets a value indicating whether to apply endpoints and bindings boosting.
            </summary>
            <value><c>true</c> if to apply endpoints and bindings boosting; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:WcfContrib.Client.AsyncInvokeStage">
            <summary>
            Represents asynchronous invocation stage
            </summary>
        </member>
        <member name="F:WcfContrib.Client.AsyncInvokeStage.Begin">
            <summary>
            Begin asynchronous invocation
            </summary>
        </member>
        <member name="F:WcfContrib.Client.AsyncInvokeStage.End">
            <summary>
            End asynchrnous invocation
            </summary>
        </member>
        <member name="T:WcfContrib.Client.Description.ClientContractDescription">
            <summary>
            Represents a client channel contract description
            </summary>
        </member>
        <member name="M:WcfContrib.Client.Description.ClientContractDescription.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.Description.ClientContractDescription"/> class.
            </summary>
            <param name="contractType">The type of the service contract.</param>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientContractDescription.Operations">
            <summary>
            Gets the contract operations.
            </summary>
            <value>The contract operations.</value>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientContractDescription.Behaviors">
            <summary>
            Gets the contract behaviors.
            </summary>
            <value>The contract behaviors.</value>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientContractDescription.ErrorHandlers">
            <summary>
            Gets the error handlers.
            </summary>
            <value>The error handlers.</value>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientContractDescription.ContractType">
            <summary>
            Gets the type of the service contract.
            </summary>
            <value>The type of the service contract.</value>
        </member>
        <member name="T:WcfContrib.Extensions.KnownOutputControllers">
            <summary>
            Represents known built output controllers.
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.KnownOutputControllers.Console">
            <summary>
            Console output controller
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.KnownOutputControllers.File">
            <summary>
            Text file output controller
            </summary>
        </member>
        <member name="T:WcfContrib.Configuration.WcfContribConfigurationSection">
            <summary>
            Represents the WcfContrib configuration section
            </summary>
        </member>
        <member name="M:WcfContrib.Configuration.WcfContribConfigurationSection.GetSection">
            <summary>
            Gets the configuration section.
            </summary>
            <returns>The configuration section</returns>
        </member>
        <member name="P:WcfContrib.Configuration.WcfContribConfigurationSection.Client">
            <summary>
            Gets or sets the client element.
            </summary>
            <value>The client.</value>
        </member>
        <member name="P:WcfContrib.Configuration.WcfContribConfigurationSection.Services">
            <summary>
            Gets or sets the services element.
            </summary>
            <value>The services.</value>
        </member>
        <member name="P:WcfContrib.Configuration.WcfContribConfigurationSection.Extensions">
            <summary>
            Gets or sets the extensions element.
            </summary>
            <value>The extensions.</value>
        </member>
        <member name="T:WcfContrib.Client.Behaviors.IChannelProvider">
            <summary>
            Represents a provider interface for managing communication channels
            </summary>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IChannelProvider.GetChannel(System.ServiceModel.ChannelFactory,WcfContrib.Client.Behaviors.ChannelContextMode,System.Boolean@)">
            <summary>
            Gets the communication channel.
            </summary>
            <param name="factory">The channel factory.</param>
            <param name="mode">The context mode.</param>
            <param name="isCreated">if set to <c>true</c>, the channel had just been created.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IChannelProvider.AbortChannel(System.Object,WcfContrib.Client.Behaviors.ChannelContextMode)">
            <summary>
            Aborts the communication channel.
            </summary>
            <param name="channel">The communication channel.</param>
            <param name="mode">The context mode.</param>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IChannelProvider.CloseChannel(System.Object,WcfContrib.Client.Behaviors.ChannelContextMode)">
            <summary>
            Closes the communication channel.
            </summary>
            <param name="channel">The communication channel.</param>
            <param name="mode">The context mode.</param>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IChannelProvider.CloseChannelAsync(System.Object,WcfContrib.Client.Behaviors.ChannelContextMode,System.Int32)">
            <summary>
            Closes the communication channel asynchronously.
            </summary>
            <param name="channel">The communication channel.</param>
            <param name="mode">The context mode.</param>
            <param name="timeoutInSeconds">The timeout in seconds.</param>
        </member>
        <member name="M:WcfContrib.Client.Behaviors.IChannelProvider.TerminateChannel(System.Object,WcfContrib.Client.Behaviors.ChannelContextMode)">
            <summary>
            Terminates the communication channel.
            </summary>
            <param name="channel">The communication channel.</param>
            <param name="mode">The context mode.</param>
        </member>
        <member name="T:WcfContrib.Extensions.ParameterDetail">
            <summary>
            Represents the level of parameter detail.
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.ParameterDetail.None">
            <summary>
            No detail
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.ParameterDetail.Existence">
            <summary>
            Shows whether the parameters are instantiated or not
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.ParameterDetail.SerializeOnFaultReply">
            <summary>
            Serializes the parameters only if the reply is a fault message
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.ParameterDetail.Serialize">
            <summary>
            Serializes the parameters
            </summary>
        </member>
        <member name="T:WcfContrib.Extensions.Caching.IntervalBasedCacheProvider">
            <summary>
            Represents a cache provider which caches items to the IOutputCacheStore attached to it
            The provider purges the items using a timer defined with a certain interval
            </summary>
        </member>
        <member name="T:WcfContrib.Extensions.Caching.IOutputCacheProvider">
            <summary>
            Represents implementation for a provider for output caching
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.IOutputCacheProvider.AddItem(WcfContrib.Extensions.Caching.OutputCacheItemKey,WcfContrib.Extensions.Caching.OutputCacheInterval,System.Object)">
            <summary>
            Adds the item to the provider.
            </summary>
            <param name="key">The item key.</param>
            <param name="interval">The cache interval.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.IOutputCacheProvider.TryGetItem(WcfContrib.Extensions.Caching.OutputCacheItemKey,System.Object@)">
            <summary>
            Tries to get the item from the provider.
            </summary>
            <param name="key">The item key.</param>
            <param name="value">The value.</param>
            <returns>true if the item was found; otherwise, false</returns>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.IntervalBasedCacheProvider.#ctor(System.Int32,WcfContrib.Extensions.Caching.IOutputCacheStore)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Caching.IntervalBasedCacheProvider"/> class.
            </summary>
            <param name="purgeTimerIntervalInMilliseconds">The purge timer interval in milliseconds.</param>
            <param name="store">The output cache store.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.IntervalBasedCacheProvider.AddItem(WcfContrib.Extensions.Caching.OutputCacheItemKey,WcfContrib.Extensions.Caching.OutputCacheInterval,System.Object)">
            <summary>
            Adds the item to the provider.
            </summary>
            <param name="key">The item key.</param>
            <param name="interval">The cache interval.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.IntervalBasedCacheProvider.TryGetItem(WcfContrib.Extensions.Caching.OutputCacheItemKey,System.Object@)">
            <summary>
            Tries to get the item from the provider.
            </summary>
            <param name="key">The item key.</param>
            <param name="value">The value.</param>
            <returns>true if the item was found; otherwise, false</returns>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.IntervalBasedCacheProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:WcfContrib.Extensions.Caching.InProcOutputCacheStore">
            <summary>
            Represents a store for ouput caching for a synchronized in-proc in-memory cache
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.InProcOutputCacheStore.SetItem(WcfContrib.Extensions.Caching.OutputCacheItemKey,System.Object)">
            <summary>
            Adds or replaces the item in the store.
            </summary>
            <param name="key">The item key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.InProcOutputCacheStore.RemoveItem(WcfContrib.Extensions.Caching.OutputCacheItemKey)">
            <summary>
            Removes the item from the store.
            </summary>
            <param name="key">The item key.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.InProcOutputCacheStore.TryGetItem(WcfContrib.Extensions.Caching.OutputCacheItemKey,System.Object@)">
            <summary>
            Tries to get the item from the store.
            </summary>
            <param name="key">The item key.</param>
            <param name="value">The value.</param>
            <returns>
            true if the item was found; otherwise, false
            </returns>
        </member>
        <member name="T:WcfContrib.Metadata.MetadataDescription">
            <summary>
            Represents the summary description for a service metadata.
            </summary>
        </member>
        <member name="M:WcfContrib.Metadata.MetadataDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Metadata.MetadataDescription"/> class.
            </summary>
        </member>
        <member name="P:WcfContrib.Metadata.MetadataDescription.Endpoints">
            <summary>
            Gets the collection of endpoints summary description imported from the metadata
            </summary>
        </member>
        <member name="P:WcfContrib.Metadata.MetadataDescription.MexClient">
            <summary>
            Get the metadata exchange client used to retrieve the metadata
            </summary>
        </member>
        <member name="P:WcfContrib.Metadata.MetadataDescription.MetadataSet">
            <summary>
            Gets the metadata set imported from the metadata
            </summary>
        </member>
        <member name="P:WcfContrib.Metadata.MetadataDescription.MetadataImporter">
            <summary>
            Gets the metadata importer used to retrieve the metadata
            </summary>
        </member>
        <member name="T:WcfContrib.Hosting.KnownEndpointConfiguration">
            <summary>
            Represents known endpoints configurations
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.KnownEndpointConfiguration.NetTcp">
            <summary>
            A default net-tcp configuration
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.KnownEndpointConfiguration.NetTcpOneWay">
            <summary>
            A custom net-tcp protocol with one-way binding element configuration for contracts with only O/W operations
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.KnownEndpointConfiguration.NetTcpReliableSession">
            <summary>
            A net-tcp with reliable session enabled configuration
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.KnownEndpointConfiguration.BasicHttp">
            <summary>
            A default basic-http configuration
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.KnownEndpointConfiguration.WsHttp">
            <summary>
            A default ws-http configuration
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.KnownEndpointConfiguration.NetNamedPipe">
            <summary>
            A default named-pipe configuration
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.KnownEndpointConfiguration.NetMsmq">
            <summary>
            A default net-msmq configuration
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.KnownEndpointConfiguration.WebHttp">
            <summary>
            A default web-http configuration
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.KnownEndpointConfiguration.WebHttpScriptEnabled">
            <summary>
            A web-http configuration with script enabled for ajax-enabled
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.KnownEndpointConfiguration.HttpBinary">
            <summary>
            A http transport with binary message encoding
            </summary>
        </member>
        <member name="T:WcfContrib.Hosting.KnownSecurityMode">
            <summary>
            Represents known security modes
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.KnownSecurityMode.None">
            <summary>
            No security
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.KnownSecurityMode.Windows">
            <summary>
            Windows client credential
            </summary>
        </member>
        <member name="T:WcfContrib.Hosting.MetadataOptions">
            <summary>
            Represents metadata options
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.MetadataOptions.None">
            <summary>
            No metadata
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.MetadataOptions.HttpGet">
            <summary>
            Http-get enabled
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.MetadataOptions.MetadataExchangeHttp">
            <summary>
            Metadata exchange through HTTP
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.MetadataOptions.MetadataExchangeTcp">
            <summary>
            Metadata exchange through net-tcp
            </summary>
        </member>
        <member name="T:WcfContrib.Hosting.Protocol">
            <summary>
            Represents communication protocols
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.Protocol.Http">
            <summary>
            Http protocol
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.Protocol.NetTcp">
            <summary>
            Net-tcp protocol
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.Protocol.NetNamedPipe">
            <summary>
            Named-pipe protocol
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.Protocol.NetMsmq">
            <summary>
            Net-msmq protocol
            </summary>
        </member>
        <member name="T:WcfContrib.Hosting.EndpointConfigurationDescription">
            <summary>
            Represents endpoint configuration description
            </summary>
        </member>
        <member name="P:WcfContrib.Hosting.EndpointConfigurationDescription.KnownConfiguration">
            <summary>
            Gets or sets the known configuration.
            </summary>
            <value>The known configuration.</value>
        </member>
        <member name="P:WcfContrib.Hosting.EndpointConfigurationDescription.SecurityMode">
            <summary>
            Gets or sets the security mode.
            </summary>
            <value>The security mode.</value>
        </member>
        <member name="P:WcfContrib.Hosting.EndpointConfigurationDescription.Protocol">
            <summary>
            Gets or sets the protocol.
            </summary>
            <value>The protocol.</value>
        </member>
        <member name="P:WcfContrib.Hosting.EndpointConfigurationDescription.AddressSuffix">
            <summary>
            Gets or sets the address suffix.
            </summary>
            <value>The address suffix.</value>
        </member>
        <member name="P:WcfContrib.Hosting.EndpointConfigurationDescription.TransactionFlow">
            <summary>
            Gets or sets the transaction flow.
            </summary>
            <value>The transaction flow.</value>
        </member>
        <member name="P:WcfContrib.Hosting.EndpointConfigurationDescription.Port">
            <summary>
            Gets or sets the desired port.
            </summary>
            <value>The port.</value>
        </member>
        <member name="P:WcfContrib.Hosting.EndpointConfigurationDescription.ContractTypes">
            <summary>
            Gets or sets the specific contract types supported by the endpoint.
            </summary>
            <value>The contract types.</value>
        </member>
        <member name="T:WcfContrib.Hosting.MsmqEndpointConfigurationDescription">
            <summary>
            Represents msmq endpoint configuration description
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.MsmqEndpointConfigurationDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.MsmqEndpointConfigurationDescription"/> class.
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.MsmqEndpointConfigurationDescription.#ctor(WcfContrib.Hosting.MsmqEndpointDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.MsmqEndpointConfigurationDescription"/> class.
            </summary>
            <param name="details">The msmq endpoint details.</param>
        </member>
        <member name="P:WcfContrib.Hosting.MsmqEndpointConfigurationDescription.Details">
            <summary>
            Gets or sets the msmq endpoint details.
            </summary>
            <value>The msmq endpoint details.</value>
        </member>
        <member name="T:WcfContrib.Hosting.MsmqEndpointDetails">
            <summary>
            Represents msmq endpoint details
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.MsmqEndpointDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.MsmqEndpointDetails"/> class.
            </summary>
        </member>
        <member name="P:WcfContrib.Hosting.MsmqEndpointDetails.TimeToLive">
            <summary>
            Gets or sets the time to live.
            </summary>
            <value>The time to live.</value>
        </member>
        <member name="P:WcfContrib.Hosting.MsmqEndpointDetails.ReceiveErrorHandling">
            <summary>
            Gets or sets the receive error handling.
            </summary>
            <value>The receive error handling.</value>
        </member>
        <member name="P:WcfContrib.Hosting.MsmqEndpointDetails.ReceiveRetryCount">
            <summary>
            Gets or sets the receive retry count.
            </summary>
            <value>The receive retry count.</value>
        </member>
        <member name="P:WcfContrib.Hosting.MsmqEndpointDetails.MaxRetryCycles">
            <summary>
            Gets or sets the max retry cycles.
            </summary>
            <value>The max retry cycles.</value>
        </member>
        <member name="P:WcfContrib.Hosting.MsmqEndpointDetails.RetryCycleDelay">
            <summary>
            Gets or sets the retry cycle delay.
            </summary>
            <value>The retry cycle delay.</value>
        </member>
        <member name="P:WcfContrib.Hosting.MsmqEndpointDetails.ExactlyOnce">
            <summary>
            Gets or sets a value indicating whether should process messages exactly once.
            </summary>
            <value><c>true</c> if should process messages exactly once; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:WcfContrib.Hosting.MsmqEndpointDetails.Durable">
            <summary>
            Gets or sets a value indicating whether messages are durable.
            </summary>
            <value><c>true</c> if messages are durable; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:WcfContrib.Hosting.ProtocolConfigurationDescription">
            <summary>
            Represents protocol configuration description
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.ProtocolConfigurationDescription.#ctor(WcfContrib.Hosting.ProtocolDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.ProtocolConfigurationDescription"/> class.
            </summary>
            <param name="protocolDescription">The protocol description.</param>
        </member>
        <member name="M:WcfContrib.Hosting.ProtocolConfigurationDescription.#ctor(WcfContrib.Hosting.ProtocolDescription,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.ProtocolConfigurationDescription"/> class.
            </summary>
            <param name="protocolDescription">The protocol description.</param>
            <param name="port">The port.</param>
        </member>
        <member name="P:WcfContrib.Hosting.ProtocolConfigurationDescription.ProtocolDescription">
            <summary>
            Gets the protocol description.
            </summary>
            <value>The protocol description.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ProtocolConfigurationDescription.Port">
            <summary>
            Gets or sets the port.
            </summary>
            <value>The port.</value>
        </member>
        <member name="T:WcfContrib.Hosting.ProtocolDescription">
            <summary>
            Represents protocol description
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.ProtocolDescription.NetTcp">
            <summary>
            Represents a net-tcp protocol description
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.ProtocolDescription.Http">
            <summary>
            Represents a HTTP protocol description
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.ProtocolDescription.NetNamedPipe">
            <summary>
            Represents a named-pipe protocol description
            </summary>
        </member>
        <member name="F:WcfContrib.Hosting.ProtocolDescription.NetMsmq">
            <summary>
            Represents a net-msmq protocol description
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.ProtocolDescription.#ctor(WcfContrib.Hosting.Protocol,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.ProtocolDescription"/> class.
            </summary>
            <param name="protocol">The protocol.</param>
            <param name="scheme">The scheme.</param>
            <param name="useLocalAddress">if set to <c>true</c> then use local address.</param>
        </member>
        <member name="M:WcfContrib.Hosting.ProtocolDescription.HandleBaseAddress(System.String)">
            <summary>
            Handles the base address.
            </summary>
            <param name="address">The base address.</param>
            <returns></returns>
        </member>
        <member name="P:WcfContrib.Hosting.ProtocolDescription.Protocol">
            <summary>
            Gets the protocol.
            </summary>
            <value>The protocol.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ProtocolDescription.Scheme">
            <summary>
            Gets the scheme.
            </summary>
            <value>The scheme.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ProtocolDescription.UseLocalAddress">
            <summary>
            Gets a value indicating whether to use local address.
            </summary>
            <value><c>true</c> if to use local address; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:WcfContrib.Hosting.NetTcpProtocolDescription">
            <summary>
            Represents net-tcp protocol description
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.NetTcpProtocolDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.NetTcpProtocolDescription"/> class.
            </summary>
        </member>
        <member name="T:WcfContrib.Hosting.NetNamedPipeProtocolDescription">
            <summary>
            Represents named-pipe protocol description
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.NetNamedPipeProtocolDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.NetNamedPipeProtocolDescription"/> class.
            </summary>
        </member>
        <member name="T:WcfContrib.Hosting.NetMsmqProtocolDescription">
            <summary>
            Represents net-msmq protocol description
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.NetMsmqProtocolDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.NetMsmqProtocolDescription"/> class.
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.NetMsmqProtocolDescription.HandleBaseAddress(System.String)">
            <summary>
            Handles the base address.
            </summary>
            <param name="address">The base address.</param>
            <returns></returns>
        </member>
        <member name="T:WcfContrib.Hosting.HttpProtocolDescription">
            <summary>
            Represents HTTP protocol description
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.HttpProtocolDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.HttpProtocolDescription"/> class.
            </summary>
        </member>
        <member name="T:WcfContrib.Helpers.BindingHelper">
            <summary>
            A helper class for dealing with bindings
            </summary>
        </member>
        <member name="M:WcfContrib.Helpers.BindingHelper.TryBoosting(System.ServiceModel.Channels.Binding)">
            <summary>
            Tries boosting the binding configuration.
            Increases the max received message size, the buffer sizes and the reader quotas.
            Returns whether the boosting had been applied. (Supports only known bindings, not custom)
            </summary>
            <param name="binding">The binding.</param>
            <returns>Whether the boosting had taken place or not.</returns>
        </member>
        <member name="M:WcfContrib.Helpers.BindingHelper.BoostBinding(System.ServiceModel.NetTcpBinding)">
            <summary>
            Boosts the binding configuration.
            Increases the max received message size, the buffer sizes and the reader quotas.
            </summary>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:WcfContrib.Helpers.BindingHelper.BoostBinding(System.ServiceModel.NetMsmqBinding)">
            <summary>
            Boosts the binding configuration.
            Increases the max received message size, the buffer sizes and the reader quotas.
            </summary>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:WcfContrib.Helpers.BindingHelper.BoostBinding(System.ServiceModel.BasicHttpBinding)">
            <summary>
            Boosts the binding configuration.
            Increases the max received message size, the buffer sizes and the reader quotas.
            </summary>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:WcfContrib.Helpers.BindingHelper.BoostBinding(System.ServiceModel.WSHttpBinding)">
            <summary>
            Boosts the binding configuration.
            Increases the max received message size, the buffer sizes and the reader quotas.
            </summary>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:WcfContrib.Helpers.BindingHelper.BoostBinding(System.ServiceModel.NetNamedPipeBinding)">
            <summary>
            Boosts the binding configuration.
            Increases the max received message size, the buffer sizes and the reader quotas.
            </summary>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:WcfContrib.Helpers.BindingHelper.BoostBinding(System.ServiceModel.WebHttpBinding)">
            <summary>
            Boosts the binding configuration.
            Increases the max received message size, the buffer sizes and the reader quotas.
            </summary>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:WcfContrib.Helpers.BindingHelper.TryBindingAction``1(System.ServiceModel.Channels.Binding,System.Action{``0})">
            <summary>
            Tries an action on a binding if a cast had been successfuly.
            Returnes whether the action had been executed.
            </summary>
            <typeparam name="T">The binding assignable type</typeparam>
            <param name="binding">The binding.</param>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="T:WcfContrib.Extensions.Caching.OutputCacheInterval">
            <summary>
            Represents description for output cache interval
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheInterval.CloneCore">
            <summary>
            Clones this instance for handling with the cache provider.
            </summary>
            <returns>The cloned OutputCacheInterval</returns>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.OutputCacheInterval.IsActive">
            <summary>
            Determines whether this interval description is valid for the current time.
            </summary>
            <returns>
            	<c>true</c> if this interval description is valid for the current time; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheInterval.Policy">
            <summary>
            Gets or sets the cache policy.
            </summary>
            <value>The cache policy.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheInterval.Interval">
            <summary>
            Gets or sets the time interval.
            </summary>
            <value>The time interval.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheInterval.LastVisitedAt">
            <summary>
            Gets or sets the time the item was last retrieved at.
            </summary>
            <value>The time the item was last retrieved at.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Caching.OutputCacheInterval.AddedAt">
            <summary>
            Gets or sets the time the item was last added at.
            </summary>
            <value>The time the item was last added at.</value>
        </member>
        <member name="T:WcfContrib.Extensions.OperationCallActionAttribute">
            <summary>
            Represents the base class for implementing custom logic upon operation invocation.
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.OperationCallActionAttribute.TryGetInput``1(System.Object[],``0@)">
            <summary>
            Gets the first assignable input parameter
            </summary>
            <typeparam name="T">The input parameter assignable type</typeparam>
            <param name="inputs">The input parameters</param>
            <param name="value">The input value</param>
            <returns>Whether the input was found</returns>
        </member>
        <member name="M:WcfContrib.Extensions.OperationCallActionAttribute.TryGetInput``1(System.Object[],System.Int32,``0@)">
            <summary>
            Gets an input parameter in a given index
            </summary>
            <typeparam name="T">The input parameter assignable type</typeparam>
            <param name="inputs">The input parameters</param>
            <param name="index">The parameter index</param>
            <param name="value">The input value</param>
            <returns>Whether the input was found</returns>
        </member>
        <member name="M:WcfContrib.Extensions.OperationCallActionAttribute.TryGetInput``1(System.Object[],System.Int32,System.Int32,``0@)">
            <summary>
            Gets an input parameter starting from the specified index until the occurence count match
            </summary>
            <typeparam name="T">The input parameter assignable type</typeparam>
            <param name="inputs">The input parameters</param>
            <param name="index">The parameter index</param>
            <param name="occurrence">The occurence count</param>
            <param name="value">The input value</param>
            <returns>Whether the input was found</returns>
        </member>
        <member name="M:WcfContrib.Extensions.OperationCallActionAttribute.GetInvalidException">
            <summary>
            Returns the invalid exception to be thrown to the client.
            </summary>
            <returns>The exception</returns>
        </member>
        <member name="M:WcfContrib.Extensions.OperationCallActionAttribute.LoadContext(System.String,System.Object[],System.Boolean@)">
            <summary>'
            Load context if necessary, returns the context that was loaded to be sent to the execute operation.
            Setting isValid to false will cause an invalid exception to be thrown back to the client
            </summary>
            <param name="operationName">The operation name</param>
            <param name="inputs">The input parameters</param>
            <param name="isValid">Whether the context is valid</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Extensions.OperationCallActionAttribute.Execute(System.String,System.Object[],System.Object)">
            <summary>
            Execute custom action
            </summary>
            <param name="operationName">The operation name</param>
            <param name="inputs">The input parameters</param>
            <param name="context">The context that was returned from the context loading method</param>
        </member>
        <member name="T:WcfContrib.Extensions.Context.ActivationContextExtension">
            <summary>
            Represents an extension for a service activation.
            You can get the attached extension through the Current static property.
            Gives you access to activation related information and settings.
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Context.ActivationContextExtension.#ctor(System.ServiceModel.Channels.Message)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Context.ActivationContextExtension"/> class.
            </summary>
            <param name="requestMessage">The request message.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Context.ActivationContextExtension.#ctor(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageBuffer)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Context.ActivationContextExtension"/> class.
            </summary>
            <param name="requestMessage">The request message.</param>
            <param name="messageBuffer">The message buffer.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Context.ActivationContextExtension.#ctor(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageBuffer,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Context.ActivationContextExtension"/> class.
            </summary>
            <param name="requestMessage">The request message.</param>
            <param name="messageBuffer">The message buffer.</param>
            <param name="createBufferForErrors">if set to <c>true</c> a seperate buffer is preserved for error handlers processing.</param>
        </member>
        <member name="M:WcfContrib.Extensions.Context.ActivationContextExtension.GetRequestMessage">
            <summary>
            Gets the request message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Extensions.Context.ActivationContextExtension.Dispose">
            <summary>
            Releases the sources held by the extension.
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtension.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtension.IdentityName">
            <summary>
            Gets the name of the identity assoicated with the claim identity source.
            </summary>
            <value>The name of the identity.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtension.Parameters">
            <summary>
            Gets the operation parameter values.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtension.ToHeader">
            <summary>
            Gets the to message header value
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtension.ServiceType">
            <summary>
            Gets the type of the service.
            </summary>
            <value>The type of the service.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtension.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>The name of the service.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtension.ServiceNamespace">
            <summary>
            Gets the service namespace.
            </summary>
            <value>The service namespace.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtension.CallItems">
            <summary>
            Gets the call items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtension.SessionItems">
            <summary>
            Gets the session items.
            </summary>
            <value>The session items.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Context.ActivationContextExtension.Current">
            <summary>
            Gets the activaction extension attached on the current operation context.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:WcfContrib.Exceptions.ExceptionBase">
            <summary>
            Represents a base class for exceptions
            </summary>
        </member>
        <member name="M:WcfContrib.Exceptions.ExceptionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Exceptions.ExceptionBase"/> class.
            </summary>
        </member>
        <member name="M:WcfContrib.Exceptions.ExceptionBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Exceptions.ExceptionBase"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:WcfContrib.Exceptions.ExceptionBase.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Exceptions.ExceptionBase"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:WcfContrib.Exceptions.ExceptionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Exceptions.ExceptionBase"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:WcfContrib.Exceptions.ExceptionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is a null reference (Nothing in Visual Basic).
            </exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter"/>
            </PermissionSet>
        </member>
        <member name="P:WcfContrib.Exceptions.ExceptionBase.OccuredAt">
            <summary>
            Gets the time the exception occured at.
            </summary>
            <value>The occured at.</value>
        </member>
        <member name="T:WcfContrib.Extensions.Caching.IOutputCacheProviderFactory">
            <summary>
            Represents an interface for implementing an output cache provider factory
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.IOutputCacheProviderFactory.CreateProvider">
            <summary>
            Creates the output cache provider.
            </summary>
            <returns>The output cache provider</returns>
        </member>
        <member name="T:WcfContrib.Client.ChannelInvokeAsyncResult">
            <summary>
            Represents the status of a client channel asynchronous operation.
            </summary>
        </member>
        <member name="M:WcfContrib.Client.ChannelInvokeAsyncResult.#ctor(System.IAsyncResult,System.Exception,WcfContrib.Client.AsyncInvokeStage,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ChannelInvokeAsyncResult"/> class.
            </summary>
            <param name="innerResult">The wrapped async result.</param>
            <param name="exception">The exception.</param>
            <param name="exceptionStage">The exception stage.</param>
            <param name="asyncState">The async state object.</param>
        </member>
        <member name="M:WcfContrib.Client.ChannelInvokeAsyncResult.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ChannelInvokeAsyncResult"/> class.
            </summary>
            <param name="result">The result.</param>
            <param name="asyncState">The async state object.</param>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeAsyncResult.Result">
            <summary>
            Gets the result.
            </summary>
            <value>The result.</value>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeAsyncResult.HasError">
            <summary>
            Gets a value indicating whether an error has occured.
            </summary>
            <value><c>true</c> if an error has occured; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeAsyncResult.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeAsyncResult.ExceptionStage">
            <summary>
            Gets the stage in which the exception occured.
            </summary>
            <value>The exception stage.</value>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeAsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
            <value></value>
            <returns>
            A user-defined object that qualifies or contains information about an asynchronous operation.
            </returns>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeAsyncResult.AsyncWaitHandle">
            <summary>
            Gets a <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </returns>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeAsyncResult.CompletedSynchronously">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed synchronously.
            </summary>
            <value></value>
            <returns>true if the asynchronous operation completed synchronously; otherwise, false.
            </returns>
        </member>
        <member name="P:WcfContrib.Client.ChannelInvokeAsyncResult.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation has completed.
            </summary>
            <value></value>
            <returns>true if the operation is complete; otherwise, false.
            </returns>
        </member>
        <member name="T:WcfContrib.Client.ChannelExceptionEventArgs">
            <summary>
            Represents a channel exception details
            </summary>
        </member>
        <member name="M:WcfContrib.Client.ChannelExceptionEventArgs.#ctor(System.Type,System.Type,System.Reflection.MethodBase,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ChannelExceptionEventArgs"/> class.
            </summary>
            <param name="instanceType">Type of the client instance.</param>
            <param name="contractType">Type of the contract.</param>
            <param name="method">The method that yielded the exception.</param>
            <param name="exception">The exception.</param>
            <param name="parameters">The parameter values sent to the method.</param>
        </member>
        <member name="P:WcfContrib.Client.ChannelExceptionEventArgs.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:WcfContrib.Client.ChannelExceptionEventArgs.InvokeContext">
            <summary>
            Gets the invocation context.
            </summary>
            <value>The invoke context.</value>
        </member>
        <member name="T:WcfContrib.Metadata.MetadataEndpointDescription">
            <summary>
            Represents the summary description for a service endpoint metadata
            </summary>
        </member>
        <member name="M:WcfContrib.Metadata.MetadataEndpointDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Metadata.MetadataEndpointDescription"/> class.
            </summary>
        </member>
        <member name="P:WcfContrib.Metadata.MetadataEndpointDescription.Policies">
            <summary>
            Gets the policy definitions defined on the endpoint
            </summary>
        </member>
        <member name="P:WcfContrib.Metadata.MetadataEndpointDescription.Endpoint">
            <summary>
            Gets the service endpoint
            </summary>
        </member>
        <member name="T:WcfContrib.Hosting.ServiceHost`1">
            <summary>
            Represents a gneric service host
            </summary>
            <typeparam name="T">The service implementation type</typeparam>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceHost`1.#ctor(System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.ServiceHost`1"/> class.
            </summary>
            <param name="baseAddresses">An array of type System.Uri that contains the base addresses for the hosted service.</param>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceHost`1.#ctor(WcfContrib.Hosting.ServiceConfigurationDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.ServiceHost`1"/> class.
            </summary>
            <param name="configuration">The service configuration.</param>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceHost`1.#ctor(System.Object,System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.ServiceHost`1"/> class.
            </summary>
            <param name="singletonInstance">The instance of the hosted service.</param>
            <param name="baseAddresses">An <see cref="T:System.Array"/> of type <see cref="T:System.Uri"/> that contains the base addresses for the hosted service.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="singletonInstance"/> is null.</exception>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceHost`1.InitializeRuntime">
            <summary>
            Initializes the runtime for the service host.
            </summary>
            <exception cref="T:System.InvalidOperationException">The description of the service hosted is null.</exception>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceHost`1.OnOpening">
            <summary>
            Invoked during the transition of a communication object into the opening state.
            </summary>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceHost`1.ApplyBoosting">
            <summary>
            Gets or sets a value indicating whether to apply endpoints and bindings boosting.
            </summary>
            <value><c>true</c> if to apply endpoints and bindings boosting; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:WcfContrib.Helpers.ServiceHelper">
            <summary>
            A helper class for dealing with services and hosting
            </summary>
        </member>
        <member name="M:WcfContrib.Helpers.ServiceHelper.AddSafely``2(System.Collections.Generic.KeyedByTypeCollection{``0},System.Func{``1})">
            <summary>
            Adds a behavior if another of the same type does not exist.
            </summary>
            <typeparam name="TBehavior">The type of the behavior</typeparam>
            <typeparam name="TCreateBehavior">The type of the behavior that is created</typeparam>
            <param name="collection">The behaviors collection</param>
            <param name="behaviorInitializer">Delegate for behavior creation</param>
        </member>
        <member name="T:WcfContrib.Exceptions.FaultExceptionBase">
            <summary>
            Represents a base class for fault exceptions
            </summary>
        </member>
        <member name="M:WcfContrib.Exceptions.FaultExceptionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Exceptions.FaultExceptionBase"/> class.
            </summary>
        </member>
        <member name="M:WcfContrib.Exceptions.FaultExceptionBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Exceptions.FaultExceptionBase"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:WcfContrib.Exceptions.FaultExceptionBase.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Exceptions.FaultExceptionBase"/> class.
            </summary>
            <param name="name">The fault name.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:WcfContrib.Exceptions.FaultExceptionBase.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Exceptions.FaultExceptionBase"/> class.
            </summary>
            <param name="name">The fault name.</param>
            <param name="ns">The namespace.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:WcfContrib.Exceptions.FaultExceptionBase.CreateAccessDeniedFault">
            <summary>
            Creates a fault representing denied access.
            </summary>
            <returns>The fault</returns>
        </member>
        <member name="T:WcfContrib.Extensions.Caching.OutputCachePolicy">
            <summary>
            Represents output cache policies
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.Caching.OutputCachePolicy.Absolute">
            <summary>
            Absolute-based interval, counting from the time the item was inserted to the cache
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.Caching.OutputCachePolicy.Sliding">
            <summary>
            Sliding-based interval, counting from the time the item was last retrieved from the cache
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.Caching.OutputCachePolicy.Indefinite">
            <summary>
            Indefinite time, stays alive forever, never gets clear
            </summary>
        </member>
        <member name="T:WcfContrib.Extensions.Caching.IntervalBasedCacheProviderFactory">
            <summary>
            Represents a cache provider factory which creates "IntervalBasedCacheProvider" with a Synchronized Dictionary as its IOutputCacheStore (in-proc cache)
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Caching.IntervalBasedCacheProviderFactory.CreateProvider">
            <summary>
            Creates the output cache provider.
            </summary>
            <returns>The output cache provider</returns>
        </member>
        <member name="T:WcfContrib.Resources.ExceptionMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.ClientChannel_ContractMethodMismatch">
            <summary>
              Looks up a localized string similar to Couldn&apos;t find a matching contract method.
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.ClientChannel_ExtensionCall">
            <summary>
              Looks up a localized string similar to An exception occured while trying to call extension &apos;{0}&apos;, see InnerException for more detail..
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.ClientChannel_LockTimeout">
            <summary>
              Looks up a localized string similar to Couldn&apos;t acquire a synchronization lock in the alotted time.
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.ClientChannel_NullChannel">
            <summary>
              Looks up a localized string similar to The channel can&apos;t be null..
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.ClientChannel_NullChannelProvider">
            <summary>
              Looks up a localized string similar to The channel provider can&apos;t be null..
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.ClientChannel_NullFactory">
            <summary>
              Looks up a localized string similar to The channel factory can&apos;t be null..
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.HostingConfig_NoContext">
            <summary>
              Looks up a localized string similar to There is no active context available..
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.Metadata_ConnectionError">
            <summary>
              Looks up a localized string similar to There was a problem connecting to the metadata address..
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.OperationCallActionAttribute_Invalid">
            <summary>
              Looks up a localized string similar to Operation call is invalid..
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.OutputCache_NoCacheTime">
            <summary>
              Looks up a localized string similar to Must specify valid cache time unless policy is indefinite.
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.OutputCache_ProviderFactoryTypeNameInvalid">
            <summary>
              Looks up a localized string similar to Failed to create the output cache provider factory from the specified type name..
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.SecuredOperationCallActionAttribute_Unauthorized">
            <summary>
              Looks up a localized string similar to Operation call is unauthorized..
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.Singleton_ConstructorMismatch">
            <summary>
              Looks up a localized string similar to Couldn&apos;t find a parameter-less constructor (Type: {0}).
            </summary>
        </member>
        <member name="P:WcfContrib.Resources.ExceptionMessages.Singleton_InitFailure">
            <summary>
              Looks up a localized string similar to Failed to instantiate a singleton instance (Type: {0}).
            </summary>
        </member>
        <member name="T:WcfContrib.Helpers.MessageHelper">
            <summary>
            A helper class for dealing with messages
            </summary>
        </member>
        <member name="M:WcfContrib.Helpers.MessageHelper.TryGetRelatesToId(System.ServiceModel.Channels.Message,System.Guid@)">
            <summary>
            Tries to get the messages relates-to id.
            </summary>
            <param name="message">The message.</param>
            <param name="guid">The matched relates-to id.</param>
            <returns>Whether the relates-to id was matched or not</returns>
        </member>
        <member name="M:WcfContrib.Helpers.MessageHelper.TryGetMessageId(System.ServiceModel.Channels.Message,System.Guid@)">
            <summary>
            Tries to get the messages relates-to id.
            </summary>
            <param name="message">The message.</param>
            <param name="guid">The matched relates-to id.</param>
            <returns>Whether the relates-to id was matched or not</returns>
        </member>
        <member name="M:WcfContrib.Helpers.MessageHelper.TryGetUniqueId(System.Xml.UniqueId,System.Guid@)">
            <summary>
            Tries to get the guid id from the uniqueid.
            </summary>
            <param name="uniqueId">The unique id.</param>
            <param name="guid">The matched guid id.</param>
            <returns>Whether the guid id was matched or not</returns>
        </member>
        <member name="M:WcfContrib.Helpers.MessageHelper.GetRelatesToId(System.ServiceModel.Channels.Message)">
            <summary>
            Gets the message relates-to id.
            </summary>
            <param name="message">The message.</param>
            <returns>The message relates-to id</returns>
        </member>
        <member name="M:WcfContrib.Helpers.MessageHelper.GetMessageId(System.ServiceModel.Channels.Message)">
            <summary>
            Gets the message id.
            </summary>
            <param name="message">The message.</param>
            <returns>The message id</returns>
        </member>
        <member name="M:WcfContrib.Helpers.MessageHelper.GetUniqueId(System.Xml.UniqueId)">
            <summary>
            Gets the guid id from the uniqueid.
            </summary>
            <param name="uniqueId">The unique id.</param>
            <returns>The guid id from the uniqueid</returns>
        </member>
        <member name="M:WcfContrib.Helpers.MessageHelper.ReadToString(System.ServiceModel.Channels.Message)">
            <summary>
            Reads the message to string.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Helpers.MessageHelper.ReadToXElement(System.ServiceModel.Channels.Message)">
            <summary>
            Reads the message to XElement.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Helpers.MessageHelper.UriContainsSegment(System.String,System.String)">
            <summary>
            Checks whether a string URI contains a segment.
            </summary>
            <param name="uri">The URI.</param>
            <param name="segment"> The segment.</param>
            <returns></returns>
        </member>
        <member name="T:WcfContrib.Extensions.MessageAccessMode">
            <summary>
            Represents available message access modes
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.MessageAccessMode.None">
            <summary>
            No access is required
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.MessageAccessMode.Navigate">
            <summary>
            Navigation access is required
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.MessageAccessMode.Read">
            <summary>
            Actual read acces is required
            </summary>
        </member>
        <member name="T:WcfContrib.Security.SecuredOperationCallAttribute">
            <summary>
            Represents the base class for implementing authorization logic upon operation invocation.
            </summary>
        </member>
        <member name="M:WcfContrib.Security.SecuredOperationCallAttribute.GetUnauthorizedException">
            <summary>
            Returns the unauthorized exception to be thrown to the client.
            </summary>
            <returns>The exception</returns>
        </member>
        <member name="M:WcfContrib.Security.SecuredOperationCallAttribute.CanExecute(System.String,System.Object[])">
            <summary>
            Returns whether or not the operation can be executed
            </summary>
            <param name="operationName">The operation name</param>
            <param name="inputs">The operation input parameters</param>
            <returns>Whether or not the operation can be executed</returns>
        </member>
        <member name="M:WcfContrib.Security.SecuredOperationCallAttribute.Execute(System.String,System.Object[],System.Object)">
            <summary>
            Checks if the operation can be executed.
            If not, throws an unauthorized exception
            </summary>
            <param name="operationName">The operation name</param>
            <param name="inputs">The input parameters</param>
            <param name="context">The context that was returned from the context loading method</param>
        </member>
        <member name="T:WcfContrib.Handlers.IdentityScope">
            <summary>
            Represents available identity information scopes
            </summary>
        </member>
        <member name="F:WcfContrib.Handlers.IdentityScope.Windows">
            <summary>
            Windows credentials associated with the security context
            </summary>
        </member>
        <member name="F:WcfContrib.Handlers.IdentityScope.Primary">
            <summary>
            Primary identity credentials associated with the security context
            </summary>
        </member>
        <member name="F:WcfContrib.Handlers.IdentityScope.ThreadPrincipal">
            <summary>
            Thread's attached principal
            </summary>
        </member>
        <member name="F:WcfContrib.Handlers.IdentityScope.ClaimSet">
            <summary>
            Client credentials as claimms associated with the security context
            </summary>
        </member>
        <member name="T:WcfContrib.Errors.ActivationErrorContext">
            <summary>
            Represents an activation context used for error handling
            </summary>
        </member>
        <member name="P:WcfContrib.Errors.ActivationErrorContext.SecurityContext">
            <summary>
            Gets the security context.
            </summary>
            <value>The security context.</value>
        </member>
        <member name="P:WcfContrib.Errors.ActivationErrorContext.RequestMessage">
            <summary>
            Gets or sets the request message.
            </summary>
            <value>The request message.</value>
        </member>
        <member name="P:WcfContrib.Errors.ActivationErrorContext.Parameters">
            <summary>
            Gets the operation parameter values.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:WcfContrib.Errors.ActivationErrorContext.Action">
            <summary>
            Gets the operation action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:WcfContrib.Errors.ActivationErrorContext.IdentityName">
            <summary>
            Gets the name of the identity assoicated with the claim identity source.
            </summary>
            <value>The name of the identity.</value>
        </member>
        <member name="P:WcfContrib.Errors.ActivationErrorContext.ServiceType">
            <summary>
            Gets the type of the service.
            </summary>
            <value>The type of the service.</value>
        </member>
        <member name="P:WcfContrib.Errors.ActivationErrorContext.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>The name of the service.</value>
        </member>
        <member name="P:WcfContrib.Errors.ActivationErrorContext.ServiceNamespace">
            <summary>
            Gets the service namespace.
            </summary>
            <value>The service namespace.</value>
        </member>
        <member name="T:WcfContrib.Errors.IErrorContextHandler">
            <summary>
            Represents an interface for handling error context information
            </summary>
        </member>
        <member name="M:WcfContrib.Errors.IErrorContextHandler.HandleError(System.Exception,WcfContrib.Errors.ActivationErrorContext)">
            <summary>
            Handles the error
            </summary>
            <param name="error">The error</param>
            <param name="errorContext">The activation error context</param>
        </member>
        <member name="P:WcfContrib.Errors.IErrorContextHandler.RequiredMessageAccess">
            <summary>
            Gets the required message access by the handler.
            </summary>
            <value>The required message access.</value>
        </member>
        <member name="T:WcfContrib.Helpers.ChannelHelper">
            <summary>
            A helper class for dealing with communication channels
            </summary>
        </member>
        <member name="M:WcfContrib.Helpers.ChannelHelper.ShouldInitializeChannel(System.ServiceModel.ICommunicationObject)">
            <summary>
            Returns whether the channel should be initialized.
            </summary>
            <param name="channel">The communication channel.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Helpers.ChannelHelper.ShouldTerminateChannel(System.ServiceModel.ICommunicationObject)">
            <summary>
            Returns whether the channel should be terminated.
            </summary>
            <param name="channel">The communication channel.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Helpers.ChannelHelper.CloseChannel(System.ServiceModel.ICommunicationObject)">
            <summary>
            Closes the channel.
            </summary>
            <param name="channel">The communication channel.</param>
        </member>
        <member name="M:WcfContrib.Helpers.ChannelHelper.AbortChannel(System.ServiceModel.ICommunicationObject)">
            <summary>
            Aborts the channel.
            </summary>
            <param name="channel">The communication channel.</param>
        </member>
        <member name="M:WcfContrib.Helpers.ChannelHelper.CloseAsync(System.Int32,System.ServiceModel.ICommunicationObject)">
            <summary>
            Closes the channel asynchronously within the given timeout
            </summary>
            <param name="timeoutInSeconds">The timeout in seconds</param>
            <param name="channel">The communication channel</param>
        </member>
        <member name="M:WcfContrib.Helpers.ChannelHelper.SetCredentials``1(System.ServiceModel.ClientBase{``0},System.String,System.String,System.String)">
            <summary>
            Sets the credentials on the communication channel.
            </summary>
            <typeparam name="TContract">The type of the service contract.</typeparam>
            <param name="client">The client.</param>
            <param name="domain">The domain.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:WcfContrib.Helpers.ChannelHelper.SetCredentials(System.ServiceModel.ChannelFactory,System.String,System.String,System.String)">
            <summary>
            Sets the credentials on the communication channel.
            </summary>
            <param name="client">The client.</param>
            <param name="domain">The domain.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="T:WcfContrib.Extensions.ActivationOption">
            <summary>
            Represents options for extension activation.
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.ActivationOption.Disabled">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.ActivationOption.Enabled">
            <summary>
            Enabled
            </summary>
        </member>
        <member name="F:WcfContrib.Extensions.ActivationOption.UriMatch">
            <summary>
            Active is the URI contains the specific required part.
            </summary>
        </member>
        <member name="T:WcfContrib.Configuration.TypeNameConfigurationElement">
            <summary>
            Represents a configuration element for a type name definition
            </summary>
        </member>
        <member name="P:WcfContrib.Configuration.TypeNameConfigurationElement.TypeName">
            <summary>
            Gets or sets the name of the type.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="T:WcfContrib.Hosting.ServiceConfigurationDescription">
            <summary>
            Represents a service configuration description for creating service hosts.
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Hosting.ServiceConfigurationDescription"/> class.
            </summary>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.Create(System.String)">
            <summary>
            Creates the configuratiion with the specified service address suffix.
            </summary>
            <param name="serviceAddressSuffix">The service address suffix.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.Create(System.String[])">
            <summary>
            Creates the configuratiion with the specified base addresses.
            </summary>
            <param name="baseAddresses">The base addresses.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.Create(System.Uri[])">
            <summary>
            Creates the configuratiion with the specified base addresses.
            </summary>
            <param name="baseAddresses">The base addresses.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.Apply(System.Action{WcfContrib.Hosting.ServiceConfigurationDescription})">
            <summary>
            Applies the specified action.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.CreateDefault(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{WcfContrib.Hosting.KnownEndpointConfiguration},System.String[])">
            <summary>
            Creates the most default configurations.
            </summary>
            <param name="netTcpPort">The net TCP port.</param>
            <param name="httpPort">The HTTP port.</param>
            <param name="desiredNetTcpEndpoint">The desired net TCP endpoint.</param>
            <param name="baseAddresses">The base addresses.</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.CreateDefault(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{WcfContrib.Hosting.KnownEndpointConfiguration},System.Uri[])">
            <summary>
            Creates the most default configurations.
            </summary>
            <param name="netTcpPort">The net TCP port.</param>
            <param name="httpPort">The HTTP port.</param>
            <param name="desiredNetTcpEndpoint">The desired net TCP endpoint.</param>
            <param name="baseAddresses">The base addresses.</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.CreateDefault(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{WcfContrib.Hosting.KnownEndpointConfiguration},System.String)">
            <summary>
            Creates the most default configurations.
            </summary>
            <param name="netTcpPort">The net TCP port.</param>
            <param name="httpPort">The HTTP port.</param>
            <param name="desiredNetTcpEndpoint">The desired net TCP endpoint.</param>
            <param name="serviceAddressSuffix">The service address suffix.</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithBasicHttp(System.String,System.Type[])">
            <summary>
            Adds a basic-http endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithBasicHttp(System.String,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a basic-http endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithBasicHttp(System.Int32,System.Type[])">
            <summary>
            Adds a basic-http endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithBasicHttp(System.Int32,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a basic-http endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithBasicHttp(System.Nullable{System.Int32},System.String,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a basic-http endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="suffix">The service address suffix.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithHttpBinary(System.String,System.Type[])">
            <summary>
            Adds a http transport with binary message encoding endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithHttpBinary(System.String,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a http transport with binary message encoding endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithHttpBinary(System.Int32,System.Type[])">
            <summary>
            Adds a http transport with binary message encoding endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithHttpBinary(System.Int32,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a http transport with binary message encoding endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithHttpBinary(System.Nullable{System.Int32},System.String,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a http transport with binary message encoding endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="suffix">The service address suffix.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithWsHttp(System.Int32,System.Type[])">
            <summary>
            Adds a ws-http endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithWsHttp(System.String,System.Type[])">
            <summary>
            Adds a ws-http endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithWsHttp(System.String,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a ws-http endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithWsHttp(System.Int32,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a ws-http endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithWsHttp(System.Nullable{System.Int32},System.String,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a ws-http endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="suffix">The service address suffix.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithWsHttp(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a ws-http endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="suffix">The service address suffix.</param>
            <param name="securityMode">The security mode.</param>
            <param name="transactionFlow">Whether or not to enabile transaction flow.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetTcp(WcfContrib.Hosting.KnownEndpointConfiguration,System.Type[])">
            <summary>
            Adds a net-tcp endpoint to the configuration.
            </summary>
            <param name="netTcpConfiguration">The net TCP endpoint configuration.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetTcp(System.Int32,WcfContrib.Hosting.KnownEndpointConfiguration,System.Type[])">
            <summary>
            Adds a net-tcp endpoint to the configuration.
            </summary>
            <param name="netTcpPort">The net TCP port.</param>
            <param name="netTcpConfiguration">The net TCP endpoint configuration.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetTcp(System.Int32,WcfContrib.Hosting.KnownEndpointConfiguration,System.Boolean,System.Type[])">
            <summary>
            Adds a net-tcp endpoint to the configuration.
            </summary>
            <param name="netTcpPort">The net TCP port.</param>
            <param name="netTcpConfiguration">The net TCP endpoint configuration.</param>
            <param name="transactionFlow">Whether or not to enabile transaction flow.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetTcp(System.Int32,WcfContrib.Hosting.KnownEndpointConfiguration,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a net-tcp endpoint to the configuration.
            </summary>
            <param name="netTcpPort">The net TCP port.</param>
            <param name="netTcpConfiguration">The net TCP endpoint configuration.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetTcp(System.Int32,WcfContrib.Hosting.KnownEndpointConfiguration,WcfContrib.Hosting.KnownSecurityMode,System.Boolean,System.Type[])">
            <summary>
            Adds a net-tcp endpoint to the configuration.
            </summary>
            <param name="netTcpPort">The net TCP port.</param>
            <param name="netTcpConfiguration">The net TCP endpoint configuration.</param>
            <param name="securityMode">The security mode.</param>
            <param name="transactionFlow">Whether or not to enabile transaction flow.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetTcp(System.String,WcfContrib.Hosting.KnownEndpointConfiguration,System.Type[])">
            <summary>
            Adds a net-tcp endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="netTcpConfiguration">The net TCP endpoint configuration.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetTcp(System.String,WcfContrib.Hosting.KnownEndpointConfiguration,System.Boolean,System.Type[])">
            <summary>
            Adds a net-tcp endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="netTcpConfiguration">The net TCP endpoint configuration.</param>
            <param name="transactionFlow">Whether or not to enabile transaction flow.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetTcp(System.String,WcfContrib.Hosting.KnownEndpointConfiguration,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a net-tcp endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="netTcpConfiguration">The net TCP endpoint configuration.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetTcp(System.String,WcfContrib.Hosting.KnownEndpointConfiguration,WcfContrib.Hosting.KnownSecurityMode,System.Boolean,System.Type[])">
            <summary>
            Adds a net-tcp endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="netTcpConfiguration">The net TCP endpoint configuration.</param>
            <param name="securityMode">The security mode.</param>
            <param name="transactionFlow">Whether or not to enabile transaction flow.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetTcp(System.Nullable{System.Int32},System.String,WcfContrib.Hosting.KnownEndpointConfiguration,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a net-tcp endpoint to the configuration.
            </summary>
            <param name="netTcpPort">The net TCP port.</param>
            <param name="suffix">The service address suffix.</param>
            <param name="netTcpConfiguration">The net TCP endpoint configuration.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetTcp(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,WcfContrib.Hosting.KnownEndpointConfiguration,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a net-tcp endpoint to the configuration.
            </summary>
            <param name="netTcpPort">The net TCP port.</param>
            <param name="suffix">The service address suffix.</param>
            <param name="netTcpConfiguration">The net TCP endpoint configuration.</param>
            <param name="securityMode">The security mode.</param>
            <param name="transactionFlow">Whether or not to enabile transaction flow.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetNamedPipe(System.Type[])">
            <summary>
            Adds a named-pipe endpoint to the configuration.
            </summary>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetNamedPipe(WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a named-pipe endpoint to the configuration.
            </summary>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetNamedPipe(System.String,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a named-pipe endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetNamedPipe(System.String,WcfContrib.Hosting.KnownSecurityMode,System.Nullable{System.Boolean},System.Type[])">
            <summary>
            Adds a named-pipe endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="securityMode">The security mode.</param>
            <param name="transactionFlow">Whether or not to enabile transaction flow.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetMsmq(System.Type[])">
            <summary>
            Adds a net-msmq endpoint to the configuration.
            </summary>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetMsmq(System.Action{WcfContrib.Hosting.MsmqEndpointDetails},System.Type[])">
            <summary>
            Adds a net-msmq endpoint to the configuration.
            </summary>
            <param name="detailsAction">The details action.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetMsmq(System.Boolean,System.Type[])">
            <summary>
            Adds a net-msmq endpoint to the configuration.
            </summary>
            <param name="resembleMsmq3">if set to <c>true</c> the binding will resemble msmq v3.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetMsmq(System.Boolean,System.Action{WcfContrib.Hosting.MsmqEndpointDetails},System.Type[])">
            <summary>
            Adds a net-msmq endpoint to the configuration.
            </summary>
            <param name="resembleMsmq3">if set to <c>true</c> the binding will resemble msmq v3.</param>
            <param name="detailsAction">The details action.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetMsmq(WcfContrib.Hosting.KnownSecurityMode,System.Boolean,System.Type[])">
            <summary>
            Adds a net-msmq endpoint to the configuration.
            </summary>
            <param name="securityMode">The security mode.</param>
            <param name="resembleMsmq3">if set to <c>true</c> the binding will resemble msmq v3.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetMsmq(WcfContrib.Hosting.KnownSecurityMode,System.Boolean,System.Action{WcfContrib.Hosting.MsmqEndpointDetails},System.Type[])">
            <summary>
            Adds a net-msmq endpoint to the configuration.
            </summary>
            <param name="securityMode">The security mode.</param>
            <param name="resembleMsmq3">if set to <c>true</c> the binding will resemble msmq v3.</param>
            <param name="detailsAction">The details action.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetMsmq(System.String,WcfContrib.Hosting.KnownSecurityMode,System.Boolean,System.Action{WcfContrib.Hosting.MsmqEndpointDetails},System.Type[])">
            <summary>
            Adds a net-msmq endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="securityMode">The security mode.</param>
            <param name="resembleMsmq3">if set to <c>true</c> the binding will resemble msmq v3.</param>
            <param name="applyDetails">The apply details action.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetMsmq(WcfContrib.Hosting.KnownSecurityMode,WcfContrib.Hosting.MsmqEndpointDetails,System.Type[])">
            <summary>
            Adds a net-msmq endpoint to the configuration.
            </summary>
            <param name="securityMode">The security mode.</param>
            <param name="msmqDetails">The MSMQ endpoint details.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithNetMsmq(System.String,WcfContrib.Hosting.KnownSecurityMode,WcfContrib.Hosting.MsmqEndpointDetails,System.Type[])">
            <summary>
            Adds a net-msmq endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="securityMode">The security mode.</param>
            <param name="msmqDetails">The MSMQ endpoint details.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithWebHttp(System.String,WcfContrib.Hosting.KnownEndpointConfiguration,System.Type[])">
            <summary>
            Adds a web-http endpoint to the configuration
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="webHttpConfiguration">The web HTTP configuration.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithWebHttp(System.String,WcfContrib.Hosting.KnownEndpointConfiguration,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a web-http endpoint to the configuration.
            </summary>
            <param name="suffix">The service address suffix.</param>
            <param name="webHttpConfiguration">The web HTTP configuration.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithWebHttp(System.Int32,WcfContrib.Hosting.KnownEndpointConfiguration,System.Type[])">
            <summary>
            Adds a web-http endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="webHttpConfiguration">The web HTTP configuration.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithWebHttp(System.Int32,WcfContrib.Hosting.KnownEndpointConfiguration,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a web-http endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="webHttpConfiguration">The web HTTP configuration.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.WithWebHttp(System.Nullable{System.Int32},System.String,WcfContrib.Hosting.KnownEndpointConfiguration,WcfContrib.Hosting.KnownSecurityMode,System.Type[])">
            <summary>
            Adds a web-http endpoint to the configuration.
            </summary>
            <param name="httpPort">The HTTP port.</param>
            <param name="suffix">The service address suffix.</param>
            <param name="webHttpConfiguration">The web HTTP configuration.</param>
            <param name="securityMode">The security mode.</param>
            <param name="contractTypes">The specific supported contracts</param>
            <returns>The service configuration</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.MakeDiscoverable">
            <summary>
            Makes the service discoverable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.MakeDiscoverable(WcfContrib.Hosting.MetadataOptions)">
            <summary>
            Makes the service discoverable.
            </summary>
            <param name="metadataOptions">The metadata options.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.GenerateServiceHost``1">
            <summary>
            Generates the service host.
            </summary>
            <typeparam name="T">The type of the service implementation</typeparam>
            <returns>The service host</returns>
        </member>
        <member name="M:WcfContrib.Hosting.ServiceConfigurationDescription.GenerateServiceHost``1(System.Action{WcfContrib.Hosting.ServiceHost{``0}})">
            <summary>
            Generates the service host.
            </summary>
            <typeparam name="T">The type of the service implementation.</typeparam>
            <param name="hostAction">The host action.</param>
            <returns>The service host</returns>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceConfigurationDescription.MachineAddress">
            <summary>
            Gets or sets the machine address.
            </summary>
            <value>The machine address.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceConfigurationDescription.SendTimeout">
            <summary>
            Gets or sets the send timeout.
            </summary>
            <value>The send timeout.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceConfigurationDescription.ReceiveTimeout">
            <summary>
            Gets or sets the receive timeout.
            </summary>
            <value>The receive timeout.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceConfigurationDescription.OpenTimeout">
            <summary>
            Gets or sets the open timeout.
            </summary>
            <value>The open timeout.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceConfigurationDescription.CloseTimeout">
            <summary>
            Gets or sets the close timeout.
            </summary>
            <value>The close timeout.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceConfigurationDescription.InactivityTimeout">
            <summary>
            Gets or sets the inactivity timeout.
            </summary>
            <value>The inactivity timeout.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceConfigurationDescription.ServiceAddress">
            <summary>
            Gets or sets the service address.
            </summary>
            <value>The service address.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceConfigurationDescription.BindingNamespace">
            <summary>
            Gets or sets the binding namespace.
            </summary>
            <value>The binding namespace.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceConfigurationDescription.BaseAddresses">
            <summary>
            Gets or sets the base addresses.
            </summary>
            <value>The base addresses.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceConfigurationDescription.Metadata">
            <summary>
            Gets or sets the metadata options.
            </summary>
            <value>The metadata options.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceConfigurationDescription.Protocols">
            <summary>
            Gets or sets the protocols descriptions.
            </summary>
            <value>The protocols descriptions.</value>
        </member>
        <member name="P:WcfContrib.Hosting.ServiceConfigurationDescription.Endpoints">
            <summary>
            Gets or sets the endpoints descriptions.
            </summary>
            <value>The endpoints descriptions.</value>
        </member>
        <member name="T:WcfContrib.Client.Description.ClientEndpointDescription">
            <summary>
            Represents a client channel endpoint description
            </summary>
        </member>
        <member name="M:WcfContrib.Client.Description.ClientEndpointDescription.#ctor(WcfContrib.Client.ClientChannel,WcfContrib.Client.Description.ClientContractDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.Description.ClientEndpointDescription"/> class.
            </summary>
            <param name="channel">The client channel.</param>
            <param name="contract">The contract description.</param>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientEndpointDescription.Behaviors">
            <summary>
            Gets the endpoint behaviors.
            </summary>
            <value>The behaviors.</value>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientEndpointDescription.ChannelHandlers">
            <summary>
            Gets the channel handlers.
            </summary>
            <value>The channel handlers.</value>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientEndpointDescription.ChannelProvider">
            <summary>
            Gets or sets the channel provider.
            </summary>
            <value>The channel provider.</value>
        </member>
        <member name="P:WcfContrib.Client.Description.ClientEndpointDescription.Contract">
            <summary>
            Gets the contract description.
            </summary>
            <value>The contract.</value>
        </member>
        <member name="T:WcfContrib.Extensions.Behaviors.BoostedServiceBehaviorAttribute">
            <summary>
            A behavior that increases service endpoints max items in object graph to the maximum value and boosts the bindings.
            </summary>
        </member>
        <member name="M:WcfContrib.Extensions.Behaviors.BoostedServiceBehaviorAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Extensions.Behaviors.BoostedServiceBehaviorAttribute"/> class.
            </summary>
        </member>
        <member name="P:WcfContrib.Extensions.Behaviors.BoostedServiceBehaviorAttribute.ThrottleValue">
            <summary>
            Gets or sets the throttle value.
            </summary>
            <value>The throttle value.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Behaviors.BoostedServiceBehaviorAttribute.SetThrottling">
            <summary>
            Gets or sets a value indicating whether to set throttling.
            </summary>
            <value><c>true</c> if to set throttling; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:WcfContrib.Extensions.Behaviors.BoostedServiceBehaviorAttribute.OverrideConfiguration">
            <summary>
            Gets or sets a value indicating whether to override configuration.
            </summary>
            <value>
            	<c>true</c> if to override configuration; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:WcfContrib.Client.ClientChannel`2">
            <summary>
            Represents a client channel communication manager for communicating with services
            </summary>
            <typeparam name="TInstance">The type of the client instance.</typeparam>
            <typeparam name="TContract">The type of the service contract.</typeparam>
        </member>
        <member name="T:WcfContrib.Client.ClientChannel`1">
            <summary>
            Represents a client channel communication manager for communicating with services
            </summary>
            <typeparam name="TContract">The type of the service contract.</typeparam>
        </member>
        <member name="T:WcfContrib.Client.ClientChannel">
            <summary>
            Represents a client channel communication manager for communicating with services
            </summary>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.#ctor(System.Type,WcfContrib.Client.ChannelManageOptions,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ClientChannel"/> class.
            </summary>
            <param name="contractType">The type of the service contract.</param>
            <param name="manageOptions">The communication channel management options.</param>
            <param name="setDescription">if set to <c>true</c> [set description].</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.#ctor(System.Type,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ClientChannel"/> class.
            </summary>
            <param name="contractType">The type of the service contract.</param>
            <param name="endpointName">The name of the endpoint in the configuration.</param>
            <param name="setDescription">if set to <c>true</c> [set description].</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.#ctor(System.Type,System.String,WcfContrib.Client.ChannelManageOptions,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ClientChannel"/> class.
            </summary>
            <param name="contractType">The type of the service contract.</param>
            <param name="endpointName">The name of the endpoint in the configuration.</param>
            <param name="manageOptions">The communication channel management options.</param>
            <param name="setDescription">if set to <c>true</c> the description is set.</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.Dispose">
            <summary>
            Disposes of the client channel and the communication channel
            </summary>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.CreateChannelCore(System.ServiceModel.ChannelFactory)">
            <summary>
            Creates the communication channel.
            </summary>
            <param name="factory">The channel factory.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.GenerateAddress">
            <summary>
            Generates the endpoint address.
            </summary>
            <returns>The endpoint address</returns>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.Close">
            <summary>
            Closes the communication channel.
            </summary>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.Abort">
            <summary>
            Aborts the communication channel.
            </summary>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.CreateChannelFactoryCore(System.String)">
            <summary>
            Creates the channel factory.
            </summary>
            <param name="endpointName">The name of the endpoint in the configuration.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.OnChannelFactoryCreated(System.ServiceModel.ChannelFactory)">
            <summary>
            Called when the channel factory is created.
            </summary>
            <param name="factory">The channel factory.</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.OnInvokeException(WcfContrib.Client.ChannelExceptionEventArgs)">
            <summary>
            Handles invocation error.
            Raises the <see cref="E:InvokeException"/> event.
            </summary>
            <param name="args">The <see cref="T:WcfContrib.Client.ChannelExceptionEventArgs"/> exception context.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.GetEndpointName">
            <summary>
            Gets the final name of the endpoint in the configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.InvokeChannel(System.Reflection.MethodBase,System.Object[])">
            <summary>
            Invokes the service operation.
            </summary>
            <param name="methodBase">The current method.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.InvokeChannel``1(System.Reflection.MethodBase,System.Object[])">
            <summary>
            Invokes the service operation.
            </summary>
            <typeparam name="T">The type of the result</typeparam>
            <param name="methodBase">The current method.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.InvokeChannel(System.Net.NetworkCredential,System.Reflection.MethodBase,System.Object[])">
            <summary>
            Invokes the service operation.
            </summary>
            <param name="credentials">The client network credentials.</param>
            <param name="methodBase">The current method.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.InvokeChannel``1(System.Net.NetworkCredential,System.Reflection.MethodBase,System.Object[])">
            <summary>
            Invokes the service operation.
            </summary>
            <typeparam name="T">The type of the result</typeparam>
            <param name="credentials">The client network credentials.</param>
            <param name="methodBase">The current method.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.InvokeAsync(System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>
            Invokes the service asynchrnous operation.
            </summary>
            <param name="baseMethodName">The name of the method base style. (GetFoo instead of Begin/EndGetFoo).</param>
            <param name="callback">The asynchronous invocation callback.</param>
            <param name="asyncState">The user-defined async state object.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.InvokeAsync(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>
            Invokes the service asynchrnous operation.
            </summary>
            <param name="credentials">The client network credentials.</param>
            <param name="baseMethodName">Name of the base method.</param>
            <param name="callback">The asynchronous invocation callback.</param>
            <param name="asyncState">The user-defined async state object.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.InvokeChannelAsync(System.Reflection.MethodBase,System.AsyncCallback,System.Object,System.Object[])">
            <summary>
            Invokes the service asynchrnous operation.
            </summary>
            <param name="methodBase">The current method.</param>
            <param name="callback">The callback.</param>
            <param name="asyncState">The user-defined async state object.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.InvokeChannelAsync(System.Net.NetworkCredential,System.Reflection.MethodBase,System.AsyncCallback,System.Object,System.Object[])">
            <summary>
            Invokes the service asynchrnous operation.
            </summary>
            <param name="credentials">The client network credentials.</param>
            <param name="methodBase">The current method.</param>
            <param name="callback">The asynchronous invocation callback.</param>
            <param name="asyncState">The user-defined async state object.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.Description">
            <summary>
            Gets the client channel endpoint description.
            </summary>
            <value>The client channel endpoint description.</value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.ContractType">
            <summary>
            Gets the type of the service contract.
            </summary>
            <value>The type of the service contract.</value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.Proxy">
            <summary>
            Gets the inner proxy.
            </summary>
            <value>The proxy.</value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.Address">
            <summary>
            Gets or sets the endpoint address.
            Setting it is supported at any stage on the contrary of getting it (will be populated only after the first invocation)
            </summary>
            <value>The endpoint address.</value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.CacheChannelFactory">
            <summary>
            Gets or sets a value indicating whether the client channel should cache the channel factory.
            Defaults to <c>true</c>
            </summary>
            <value><c>true</c> if the client channel should cache the channel factory; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.ManageOptions">
            <summary>
            Gets the communication management options.
            </summary>
            <value>The communication management options.</value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.Credentials">
            <summary>
            Gets or sets the client network credentials.
            </summary>
            <value>The client network credentials.</value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.IgnoreEndpointAggregation">
            <summary>
            Gets or sets a value indicating whether to ignore the endpoint aggregation.
            </summary>
            <value>
            	<c>true</c> to ignore the endpoint aggregation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.EndpointName">
            <summary>
            Gets or sets the name of the endpoint in the configuration.
            </summary>
            <value>The name of the endpoint.</value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.ThrowInlineFaultExceptions">
            <summary>
            Gets or sets a value indicating whether to throw generic FaultException&lt;T&gt; inner known exception.
            Defaults to <c>false</c>
            </summary>
            <value>
            	<c>true</c> if o throw generic FaultException&lt;T&gt; inner known exception; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.BeginCloseTimeoutInSeconds">
            <summary>
            Gets or sets the asynchronous close timeout in seconds.
            </summary>
            <value>The begin close timeout in seconds.</value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.ApplyBoosting">
            <summary>
            Gets or sets a value indicating whether to apply endpoint and binding boosting.
            </summary>
            <value><c>true</c> if to apply endpoint and binding boosting; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:WcfContrib.Client.ClientChannel.InvokeException">
            <summary>
            Occurs when invocation exceptions take place in the specific client channel.
            </summary>
        </member>
        <member name="E:WcfContrib.Client.ClientChannel.GlobalInvokeException">
            <summary>
            Occurs when invocation exceptions take place in all client channels.
            </summary>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel.Extensions">
            <summary>
            Gets a collection of extension objects for this extensible object.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.ServiceModel.IExtensionCollection`1"/> of extension objects.</returns>
        </member>
        <member name="T:WcfContrib.Client.ClientChannel.ClientProxy">
            <summary>
            Represents the client proxy used to delegate calls
            </summary>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel.ClientProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>
            Invokes the specified message.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ClientChannel`1"/> class.
            </summary>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`1.#ctor(WcfContrib.Client.ChannelManageOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ClientChannel`1"/> class.
            </summary>
            <param name="manageOptions">The communication channel management options.</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ClientChannel`1"/> class.
            </summary>
            <param name="endpointName">The name of the endpoint in the configuration.</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`1.#ctor(System.String,WcfContrib.Client.ChannelManageOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ClientChannel`1"/> class.
            </summary>
            <param name="endpointName">The name of the endpoint in the configuration.</param>
            <param name="manageOptions">The communication channel management options.</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`1.#ctor(System.String,WcfContrib.Client.ChannelManageOptions,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ClientChannel`1"/> class.
            </summary>
            <param name="endpointName">Name of the endpoint.</param>
            <param name="manageOptions">The manage options.</param>
            <param name="setDescription">if set to <c>true</c> [set description].</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`1.LoadRuntime">
            <summary>
            Load the contract runtime information
            </summary>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`1.CreateChannelCore(System.ServiceModel.ChannelFactory)">
            <summary>
            Creates the communication channel.
            </summary>
            <param name="factory">The channel factory.</param>
            <returns></returns>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`1.CreateChannelFactoryCore(System.String)">
            <summary>
            Creates the channel factory.
            </summary>
            <param name="endpointName">The name of the endpoint in the configuration.</param>
            <returns></returns>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel`1.Channel">
            <summary>
            Gets the proxy channel.
            </summary>
            <value>The proxy channel.</value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel`1.GlobalEndpointName">
            <summary>
            Gets or sets the global name of the endpoint in the configuration.
            </summary>
            <value>The global name of the endpoint.</value>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel`1.Instance">
            <summary>
            Gets the client singleton instance.
            Exposed with 'SingleCall' management option.
            </summary>
            <value>The client singleton instance.</value>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ClientChannel`2"/> class.
            </summary>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`2.#ctor(WcfContrib.Client.ChannelManageOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ClientChannel`2"/> class.
            </summary>
            <param name="manageOptions">The communication channel management options.</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`2.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ClientChannel`2"/> class.
            </summary>
            <param name="endpointName">The name of the endpoint in the configuration.</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`2.#ctor(System.String,WcfContrib.Client.ChannelManageOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:WcfContrib.Client.ClientChannel`2"/> class.
            </summary>
            <param name="endpointName">The name of the endpoint in the configuration.</param>
            <param name="manageOptions">The communication channel management options.</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`2.SetGlobalInstanceOptions(WcfContrib.Client.ChannelManageOptions)">
            <summary>
            Sets the channel management options for the singleton instance
            </summary>
            <param name="manageOptions">The channel management options</param>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`2.LoadRuntime">
            <summary>
            Load the contract runtime information
            </summary>
        </member>
        <member name="M:WcfContrib.Client.ClientChannel`2.InitializeRuntime">
            <summary>
            Initializes the client channel runtime.
            A proper place for dealing with the client description.
            </summary>
        </member>
        <member name="P:WcfContrib.Client.ClientChannel`2.Instance">
            <summary>
            Gets the client singleton instance.
            Exposed with 'SingleCall' management option.
            </summary>
            <value>The client singleton instance.</value>
        </member>
        <member name="T:WcfContrib.Client.Behaviors.ChannelContextMode">
            <summary>
            Represents options for context modes of communication channels
            </summary>
        </member>
        <member name="F:WcfContrib.Client.Behaviors.ChannelContextMode.Shared">
            <summary>
            A cross-calls shared communication channel
            </summary>
        </member>
        <member name="F:WcfContrib.Client.Behaviors.ChannelContextMode.Dedicated">
            <summary>
            A call-specific dedicated communication channel
            </summary>
        </member>
    </members>
</doc>
